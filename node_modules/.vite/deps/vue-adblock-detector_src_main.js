import {
  createBaitRequest,
  detectAnyAdblocker,
  detectDomAdblocker,
  doesBaitRequestIsBlockedByBrave,
  doesBaitRequestIsBlockedByOpera,
  isBraveBrowser,
  isOperaBrowser,
  valueOutputToPromise,
  wrapDeprecated
} from "./chunk-WSI4C6I2.js";
import "./chunk-DA74IYYC.js";

// node_modules/vue-adblock-detector/src/detectBraveShields.js
function detectBraveShields() {
  return new Promise(function(resolve, reject) {
    if (isBraveBrowser()) {
      createBaitRequest().then(function(xhttp) {
        resolve(doesBaitRequestIsBlockedByBrave(xhttp));
      });
    } else {
      resolve(false);
    }
  });
}

// node_modules/vue-adblock-detector/src/detectOperaAdblocker.js
function detectOperaAdblocker() {
  return new Promise(function(resolve, reject) {
    if (isOperaBrowser()) {
      createBaitRequest().then(function(xhttp) {
        resolve(doesBaitRequestIsBlockedByOpera(xhttp));
      });
    } else {
      resolve(false);
    }
  });
}

// node_modules/vue-adblock-detector/src/main.js
var main_default = {
  detectAnyAdblocker,
  detectDomAdblocker: valueOutputToPromise(detectDomAdblocker),
  detectBraveShields,
  detectOperaAdblocker,
  // deprecated :
  isDetected: wrapDeprecated(detectDomAdblocker, "The `isDetected()` method is now deprecated, please use `detectAnyAdblocker()` instead, which returns a Promise and can detect more stuff (like Brave Shields).")
};
export {
  main_default as default
};
//# sourceMappingURL=vue-adblock-detector_src_main.js.map
