{
  "version": 3,
  "sources": ["../../cropperjs/dist/cropper.js"],
  "sourcesContent": ["/*!\r\n * Cropper.js v1.6.1\r\n * https://fengyuanchen.github.io/cropperjs\r\n *\r\n * Copyright 2015-present Chen Fengyuan\r\n * Released under the MIT license\r\n *\r\n * Date: 2023-09-17T03:44:19.860Z\r\n */\r\n\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\r\n})(this, (function () { 'use strict';\r\n\r\n  function ownKeys(e, r) {\r\n    var t = Object.keys(e);\r\n    if (Object.getOwnPropertySymbols) {\r\n      var o = Object.getOwnPropertySymbols(e);\r\n      r && (o = o.filter(function (r) {\r\n        return Object.getOwnPropertyDescriptor(e, r).enumerable;\r\n      })), t.push.apply(t, o);\r\n    }\r\n    return t;\r\n  }\r\n  function _objectSpread2(e) {\r\n    for (var r = 1; r < arguments.length; r++) {\r\n      var t = null != arguments[r] ? arguments[r] : {};\r\n      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\r\n        _defineProperty(e, r, t[r]);\r\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\r\n        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\r\n      });\r\n    }\r\n    return e;\r\n  }\r\n  function _typeof(o) {\r\n    \"@babel/helpers - typeof\";\r\n\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\r\n      return typeof o;\r\n    } : function (o) {\r\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\r\n    }, _typeof(o);\r\n  }\r\n  function _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n      throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n  }\r\n  function _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\r\n    }\r\n  }\r\n  function _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) _defineProperties(Constructor, staticProps);\r\n    Object.defineProperty(Constructor, \"prototype\", {\r\n      writable: false\r\n    });\r\n    return Constructor;\r\n  }\r\n  function _defineProperty(obj, key, value) {\r\n    key = _toPropertyKey(key);\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n    return obj;\r\n  }\r\n  function _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n  }\r\n  function _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n  }\r\n  function _iterableToArray(iter) {\r\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n  }\r\n  function _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) return;\r\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n  }\r\n  function _arrayLikeToArray(arr, len) {\r\n    if (len == null || len > arr.length) len = arr.length;\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n    return arr2;\r\n  }\r\n  function _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n  }\r\n  function _toPrimitive(input, hint) {\r\n    if (typeof input !== \"object\" || input === null) return input;\r\n    var prim = input[Symbol.toPrimitive];\r\n    if (prim !== undefined) {\r\n      var res = prim.call(input, hint || \"default\");\r\n      if (typeof res !== \"object\") return res;\r\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n    }\r\n    return (hint === \"string\" ? String : Number)(input);\r\n  }\r\n  function _toPropertyKey(arg) {\r\n    var key = _toPrimitive(arg, \"string\");\r\n    return typeof key === \"symbol\" ? key : String(key);\r\n  }\r\n\r\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n  var WINDOW = IS_BROWSER ? window : {};\r\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\r\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\r\n  var NAMESPACE = 'cropper';\r\n\r\n  // Actions\r\n  var ACTION_ALL = 'all';\r\n  var ACTION_CROP = 'crop';\r\n  var ACTION_MOVE = 'move';\r\n  var ACTION_ZOOM = 'zoom';\r\n  var ACTION_EAST = 'e';\r\n  var ACTION_WEST = 'w';\r\n  var ACTION_SOUTH = 's';\r\n  var ACTION_NORTH = 'n';\r\n  var ACTION_NORTH_EAST = 'ne';\r\n  var ACTION_NORTH_WEST = 'nw';\r\n  var ACTION_SOUTH_EAST = 'se';\r\n  var ACTION_SOUTH_WEST = 'sw';\r\n\r\n  // Classes\r\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\r\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\r\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\r\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\r\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\r\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\r\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\r\n\r\n  // Data keys\r\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\r\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\r\n\r\n  // Drag modes\r\n  var DRAG_MODE_CROP = 'crop';\r\n  var DRAG_MODE_MOVE = 'move';\r\n  var DRAG_MODE_NONE = 'none';\r\n\r\n  // Events\r\n  var EVENT_CROP = 'crop';\r\n  var EVENT_CROP_END = 'cropend';\r\n  var EVENT_CROP_MOVE = 'cropmove';\r\n  var EVENT_CROP_START = 'cropstart';\r\n  var EVENT_DBLCLICK = 'dblclick';\r\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\r\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\r\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\r\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\r\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\r\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\r\n  var EVENT_READY = 'ready';\r\n  var EVENT_RESIZE = 'resize';\r\n  var EVENT_WHEEL = 'wheel';\r\n  var EVENT_ZOOM = 'zoom';\r\n\r\n  // Mime types\r\n  var MIME_TYPE_JPEG = 'image/jpeg';\r\n\r\n  // RegExps\r\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\r\n  var REGEXP_DATA_URL = /^data:/;\r\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\r\n  var REGEXP_TAG_NAME = /^img|canvas$/i;\r\n\r\n  // Misc\r\n  // Inspired by the default width and height of a canvas element.\r\n  var MIN_CONTAINER_WIDTH = 200;\r\n  var MIN_CONTAINER_HEIGHT = 100;\r\n\r\n  var DEFAULTS = {\r\n    // Define the view mode of the cropper\r\n    viewMode: 0,\r\n    // 0, 1, 2, 3\r\n\r\n    // Define the dragging mode of the cropper\r\n    dragMode: DRAG_MODE_CROP,\r\n    // 'crop', 'move' or 'none'\r\n\r\n    // Define the initial aspect ratio of the crop box\r\n    initialAspectRatio: NaN,\r\n    // Define the aspect ratio of the crop box\r\n    aspectRatio: NaN,\r\n    // An object with the previous cropping result data\r\n    data: null,\r\n    // A selector for adding extra containers to preview\r\n    preview: '',\r\n    // Re-render the cropper when resize the window\r\n    responsive: true,\r\n    // Restore the cropped area after resize the window\r\n    restore: true,\r\n    // Check if the current image is a cross-origin image\r\n    checkCrossOrigin: true,\r\n    // Check the current image's Exif Orientation information\r\n    checkOrientation: true,\r\n    // Show the black modal\r\n    modal: true,\r\n    // Show the dashed lines for guiding\r\n    guides: true,\r\n    // Show the center indicator for guiding\r\n    center: true,\r\n    // Show the white modal to highlight the crop box\r\n    highlight: true,\r\n    // Show the grid background\r\n    background: true,\r\n    // Enable to crop the image automatically when initialize\r\n    autoCrop: true,\r\n    // Define the percentage of automatic cropping area when initializes\r\n    autoCropArea: 0.8,\r\n    // Enable to move the image\r\n    movable: true,\r\n    // Enable to rotate the image\r\n    rotatable: true,\r\n    // Enable to scale the image\r\n    scalable: true,\r\n    // Enable to zoom the image\r\n    zoomable: true,\r\n    // Enable to zoom the image by dragging touch\r\n    zoomOnTouch: true,\r\n    // Enable to zoom the image by wheeling mouse\r\n    zoomOnWheel: true,\r\n    // Define zoom ratio when zoom the image by wheeling mouse\r\n    wheelZoomRatio: 0.1,\r\n    // Enable to move the crop box\r\n    cropBoxMovable: true,\r\n    // Enable to resize the crop box\r\n    cropBoxResizable: true,\r\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\r\n    toggleDragModeOnDblclick: true,\r\n    // Size limitation\r\n    minCanvasWidth: 0,\r\n    minCanvasHeight: 0,\r\n    minCropBoxWidth: 0,\r\n    minCropBoxHeight: 0,\r\n    minContainerWidth: MIN_CONTAINER_WIDTH,\r\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\r\n    // Shortcuts of events\r\n    ready: null,\r\n    cropstart: null,\r\n    cropmove: null,\r\n    cropend: null,\r\n    crop: null,\r\n    zoom: null\r\n  };\r\n\r\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\r\n\r\n  /**\r\n   * Check if the given value is not a number.\r\n   */\r\n  var isNaN = Number.isNaN || WINDOW.isNaN;\r\n\r\n  /**\r\n   * Check if the given value is a number.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\r\n   */\r\n  function isNumber(value) {\r\n    return typeof value === 'number' && !isNaN(value);\r\n  }\r\n\r\n  /**\r\n   * Check if the given value is a positive number.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\r\n   */\r\n  var isPositiveNumber = function isPositiveNumber(value) {\r\n    return value > 0 && value < Infinity;\r\n  };\r\n\r\n  /**\r\n   * Check if the given value is undefined.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\r\n   */\r\n  function isUndefined(value) {\r\n    return typeof value === 'undefined';\r\n  }\r\n\r\n  /**\r\n   * Check if the given value is an object.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\r\n   */\r\n  function isObject(value) {\r\n    return _typeof(value) === 'object' && value !== null;\r\n  }\r\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n  /**\r\n   * Check if the given value is a plain object.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\r\n   */\r\n  function isPlainObject(value) {\r\n    if (!isObject(value)) {\r\n      return false;\r\n    }\r\n    try {\r\n      var _constructor = value.constructor;\r\n      var prototype = _constructor.prototype;\r\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the given value is a function.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\r\n   */\r\n  function isFunction(value) {\r\n    return typeof value === 'function';\r\n  }\r\n  var slice = Array.prototype.slice;\r\n\r\n  /**\r\n   * Convert array-like or iterable object to an array.\r\n   * @param {*} value - The value to convert.\r\n   * @returns {Array} Returns a new array.\r\n   */\r\n  function toArray(value) {\r\n    return Array.from ? Array.from(value) : slice.call(value);\r\n  }\r\n\r\n  /**\r\n   * Iterate the given data.\r\n   * @param {*} data - The data to iterate.\r\n   * @param {Function} callback - The process function for each element.\r\n   * @returns {*} The original data.\r\n   */\r\n  function forEach(data, callback) {\r\n    if (data && isFunction(callback)) {\r\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\r\n        toArray(data).forEach(function (value, key) {\r\n          callback.call(data, value, key, data);\r\n        });\r\n      } else if (isObject(data)) {\r\n        Object.keys(data).forEach(function (key) {\r\n          callback.call(data, data[key], key, data);\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Extend the given object.\r\n   * @param {*} target - The target object to extend.\r\n   * @param {*} args - The rest objects for merging to the target object.\r\n   * @returns {Object} The extended object.\r\n   */\r\n  var assign = Object.assign || function assign(target) {\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n    if (isObject(target) && args.length > 0) {\r\n      args.forEach(function (arg) {\r\n        if (isObject(arg)) {\r\n          Object.keys(arg).forEach(function (key) {\r\n            target[key] = arg[key];\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return target;\r\n  };\r\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\r\n\r\n  /**\r\n   * Normalize decimal number.\r\n   * Check out {@link https://0.30000000000000004.com/}\r\n   * @param {number} value - The value to normalize.\r\n   * @param {number} [times=100000000000] - The times for normalizing.\r\n   * @returns {number} Returns the normalized number.\r\n   */\r\n  function normalizeDecimalNumber(value) {\r\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\r\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\r\n  }\r\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\r\n\r\n  /**\r\n   * Apply styles to the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {Object} styles - The styles for applying.\r\n   */\r\n  function setStyle(element, styles) {\r\n    var style = element.style;\r\n    forEach(styles, function (value, property) {\r\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\r\n        value = \"\".concat(value, \"px\");\r\n      }\r\n      style[property] = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if the given element has a special class.\r\n   * @param {Element} element - The element to check.\r\n   * @param {string} value - The class to search.\r\n   * @returns {boolean} Returns `true` if the special class was found.\r\n   */\r\n  function hasClass(element, value) {\r\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\r\n  }\r\n\r\n  /**\r\n   * Add classes to the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} value - The classes to be added.\r\n   */\r\n  function addClass(element, value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    if (isNumber(element.length)) {\r\n      forEach(element, function (elem) {\r\n        addClass(elem, value);\r\n      });\r\n      return;\r\n    }\r\n    if (element.classList) {\r\n      element.classList.add(value);\r\n      return;\r\n    }\r\n    var className = element.className.trim();\r\n    if (!className) {\r\n      element.className = value;\r\n    } else if (className.indexOf(value) < 0) {\r\n      element.className = \"\".concat(className, \" \").concat(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove classes from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} value - The classes to be removed.\r\n   */\r\n  function removeClass(element, value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    if (isNumber(element.length)) {\r\n      forEach(element, function (elem) {\r\n        removeClass(elem, value);\r\n      });\r\n      return;\r\n    }\r\n    if (element.classList) {\r\n      element.classList.remove(value);\r\n      return;\r\n    }\r\n    if (element.className.indexOf(value) >= 0) {\r\n      element.className = element.className.replace(value, '');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add or remove classes from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} value - The classes to be toggled.\r\n   * @param {boolean} added - Add only.\r\n   */\r\n  function toggleClass(element, value, added) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    if (isNumber(element.length)) {\r\n      forEach(element, function (elem) {\r\n        toggleClass(elem, value, added);\r\n      });\r\n      return;\r\n    }\r\n\r\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\r\n    if (added) {\r\n      addClass(element, value);\r\n    } else {\r\n      removeClass(element, value);\r\n    }\r\n  }\r\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\r\n\r\n  /**\r\n   * Transform the given string from camelCase to kebab-case\r\n   * @param {string} value - The value to transform.\r\n   * @returns {string} The transformed value.\r\n   */\r\n  function toParamCase(value) {\r\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get data from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} name - The data key to get.\r\n   * @returns {string} The data value.\r\n   */\r\n  function getData(element, name) {\r\n    if (isObject(element[name])) {\r\n      return element[name];\r\n    }\r\n    if (element.dataset) {\r\n      return element.dataset[name];\r\n    }\r\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\r\n  }\r\n\r\n  /**\r\n   * Set data to the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} name - The data key to set.\r\n   * @param {string} data - The data value.\r\n   */\r\n  function setData(element, name, data) {\r\n    if (isObject(data)) {\r\n      element[name] = data;\r\n    } else if (element.dataset) {\r\n      element.dataset[name] = data;\r\n    } else {\r\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove data from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} name - The data key to remove.\r\n   */\r\n  function removeData(element, name) {\r\n    if (isObject(element[name])) {\r\n      try {\r\n        delete element[name];\r\n      } catch (error) {\r\n        element[name] = undefined;\r\n      }\r\n    } else if (element.dataset) {\r\n      // #128 Safari not allows to delete dataset property\r\n      try {\r\n        delete element.dataset[name];\r\n      } catch (error) {\r\n        element.dataset[name] = undefined;\r\n      }\r\n    } else {\r\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\r\n    }\r\n  }\r\n  var REGEXP_SPACES = /\\s\\s*/;\r\n  var onceSupported = function () {\r\n    var supported = false;\r\n    if (IS_BROWSER) {\r\n      var once = false;\r\n      var listener = function listener() {};\r\n      var options = Object.defineProperty({}, 'once', {\r\n        get: function get() {\r\n          supported = true;\r\n          return once;\r\n        },\r\n        /**\r\n         * This setter can fix a `TypeError` in strict mode\r\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\r\n         * @param {boolean} value - The value to set\r\n         */\r\n        set: function set(value) {\r\n          once = value;\r\n        }\r\n      });\r\n      WINDOW.addEventListener('test', listener, options);\r\n      WINDOW.removeEventListener('test', listener, options);\r\n    }\r\n    return supported;\r\n  }();\r\n\r\n  /**\r\n   * Remove event listener from the target element.\r\n   * @param {Element} element - The event target.\r\n   * @param {string} type - The event type(s).\r\n   * @param {Function} listener - The event listener.\r\n   * @param {Object} options - The event options.\r\n   */\r\n  function removeListener(element, type, listener) {\r\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n    var handler = listener;\r\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\r\n      if (!onceSupported) {\r\n        var listeners = element.listeners;\r\n        if (listeners && listeners[event] && listeners[event][listener]) {\r\n          handler = listeners[event][listener];\r\n          delete listeners[event][listener];\r\n          if (Object.keys(listeners[event]).length === 0) {\r\n            delete listeners[event];\r\n          }\r\n          if (Object.keys(listeners).length === 0) {\r\n            delete element.listeners;\r\n          }\r\n        }\r\n      }\r\n      element.removeEventListener(event, handler, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add event listener to the target element.\r\n   * @param {Element} element - The event target.\r\n   * @param {string} type - The event type(s).\r\n   * @param {Function} listener - The event listener.\r\n   * @param {Object} options - The event options.\r\n   */\r\n  function addListener(element, type, listener) {\r\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n    var _handler = listener;\r\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\r\n      if (options.once && !onceSupported) {\r\n        var _element$listeners = element.listeners,\r\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\r\n        _handler = function handler() {\r\n          delete listeners[event][listener];\r\n          element.removeEventListener(event, _handler, options);\r\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n            args[_key2] = arguments[_key2];\r\n          }\r\n          listener.apply(element, args);\r\n        };\r\n        if (!listeners[event]) {\r\n          listeners[event] = {};\r\n        }\r\n        if (listeners[event][listener]) {\r\n          element.removeEventListener(event, listeners[event][listener], options);\r\n        }\r\n        listeners[event][listener] = _handler;\r\n        element.listeners = listeners;\r\n      }\r\n      element.addEventListener(event, _handler, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Dispatch event on the target element.\r\n   * @param {Element} element - The event target.\r\n   * @param {string} type - The event type(s).\r\n   * @param {Object} data - The additional event data.\r\n   * @returns {boolean} Indicate if the event is default prevented or not.\r\n   */\r\n  function dispatchEvent(element, type, data) {\r\n    var event;\r\n\r\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\r\n    if (isFunction(Event) && isFunction(CustomEvent)) {\r\n      event = new CustomEvent(type, {\r\n        detail: data,\r\n        bubbles: true,\r\n        cancelable: true\r\n      });\r\n    } else {\r\n      event = document.createEvent('CustomEvent');\r\n      event.initCustomEvent(type, true, true, data);\r\n    }\r\n    return element.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Get the offset base on the document.\r\n   * @param {Element} element - The target element.\r\n   * @returns {Object} The offset data.\r\n   */\r\n  function getOffset(element) {\r\n    var box = element.getBoundingClientRect();\r\n    return {\r\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\r\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\r\n    };\r\n  }\r\n  var location = WINDOW.location;\r\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\r\n\r\n  /**\r\n   * Check if the given URL is a cross origin URL.\r\n   * @param {string} url - The target URL.\r\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\r\n   */\r\n  function isCrossOriginURL(url) {\r\n    var parts = url.match(REGEXP_ORIGINS);\r\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\r\n  }\r\n\r\n  /**\r\n   * Add timestamp to the given URL.\r\n   * @param {string} url - The target URL.\r\n   * @returns {string} The result URL.\r\n   */\r\n  function addTimestamp(url) {\r\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\r\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\r\n  }\r\n\r\n  /**\r\n   * Get transforms base on the given object.\r\n   * @param {Object} obj - The target object.\r\n   * @returns {string} A string contains transform values.\r\n   */\r\n  function getTransforms(_ref) {\r\n    var rotate = _ref.rotate,\r\n      scaleX = _ref.scaleX,\r\n      scaleY = _ref.scaleY,\r\n      translateX = _ref.translateX,\r\n      translateY = _ref.translateY;\r\n    var values = [];\r\n    if (isNumber(translateX) && translateX !== 0) {\r\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\r\n    }\r\n    if (isNumber(translateY) && translateY !== 0) {\r\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\r\n    }\r\n\r\n    // Rotate should come first before scale to match orientation transform\r\n    if (isNumber(rotate) && rotate !== 0) {\r\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\r\n    }\r\n    if (isNumber(scaleX) && scaleX !== 1) {\r\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\r\n    }\r\n    if (isNumber(scaleY) && scaleY !== 1) {\r\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\r\n    }\r\n    var transform = values.length ? values.join(' ') : 'none';\r\n    return {\r\n      WebkitTransform: transform,\r\n      msTransform: transform,\r\n      transform: transform\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the max ratio of a group of pointers.\r\n   * @param {string} pointers - The target pointers.\r\n   * @returns {number} The result ratio.\r\n   */\r\n  function getMaxZoomRatio(pointers) {\r\n    var pointers2 = _objectSpread2({}, pointers);\r\n    var maxRatio = 0;\r\n    forEach(pointers, function (pointer, pointerId) {\r\n      delete pointers2[pointerId];\r\n      forEach(pointers2, function (pointer2) {\r\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\r\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\r\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\r\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\r\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\r\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\r\n        var ratio = (z2 - z1) / z1;\r\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\r\n          maxRatio = ratio;\r\n        }\r\n      });\r\n    });\r\n    return maxRatio;\r\n  }\r\n\r\n  /**\r\n   * Get a pointer from an event object.\r\n   * @param {Object} event - The target event object.\r\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\r\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\r\n   */\r\n  function getPointer(_ref2, endOnly) {\r\n    var pageX = _ref2.pageX,\r\n      pageY = _ref2.pageY;\r\n    var end = {\r\n      endX: pageX,\r\n      endY: pageY\r\n    };\r\n    return endOnly ? end : _objectSpread2({\r\n      startX: pageX,\r\n      startY: pageY\r\n    }, end);\r\n  }\r\n\r\n  /**\r\n   * Get the center point coordinate of a group of pointers.\r\n   * @param {Object} pointers - The target pointers.\r\n   * @returns {Object} The center point coordinate.\r\n   */\r\n  function getPointersCenter(pointers) {\r\n    var pageX = 0;\r\n    var pageY = 0;\r\n    var count = 0;\r\n    forEach(pointers, function (_ref3) {\r\n      var startX = _ref3.startX,\r\n        startY = _ref3.startY;\r\n      pageX += startX;\r\n      pageY += startY;\r\n      count += 1;\r\n    });\r\n    pageX /= count;\r\n    pageY /= count;\r\n    return {\r\n      pageX: pageX,\r\n      pageY: pageY\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the max sizes in a rectangle under the given aspect ratio.\r\n   * @param {Object} data - The original sizes.\r\n   * @param {string} [type='contain'] - The adjust type.\r\n   * @returns {Object} The result sizes.\r\n   */\r\n  function getAdjustedSizes(_ref4) {\r\n    var aspectRatio = _ref4.aspectRatio,\r\n      height = _ref4.height,\r\n      width = _ref4.width;\r\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\r\n    var isValidWidth = isPositiveNumber(width);\r\n    var isValidHeight = isPositiveNumber(height);\r\n    if (isValidWidth && isValidHeight) {\r\n      var adjustedWidth = height * aspectRatio;\r\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\r\n        height = width / aspectRatio;\r\n      } else {\r\n        width = height * aspectRatio;\r\n      }\r\n    } else if (isValidWidth) {\r\n      height = width / aspectRatio;\r\n    } else if (isValidHeight) {\r\n      width = height * aspectRatio;\r\n    }\r\n    return {\r\n      width: width,\r\n      height: height\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the new sizes of a rectangle after rotated.\r\n   * @param {Object} data - The original sizes.\r\n   * @returns {Object} The result sizes.\r\n   */\r\n  function getRotatedSizes(_ref5) {\r\n    var width = _ref5.width,\r\n      height = _ref5.height,\r\n      degree = _ref5.degree;\r\n    degree = Math.abs(degree) % 180;\r\n    if (degree === 90) {\r\n      return {\r\n        width: height,\r\n        height: width\r\n      };\r\n    }\r\n    var arc = degree % 90 * Math.PI / 180;\r\n    var sinArc = Math.sin(arc);\r\n    var cosArc = Math.cos(arc);\r\n    var newWidth = width * cosArc + height * sinArc;\r\n    var newHeight = width * sinArc + height * cosArc;\r\n    return degree > 90 ? {\r\n      width: newHeight,\r\n      height: newWidth\r\n    } : {\r\n      width: newWidth,\r\n      height: newHeight\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get a canvas which drew the given image.\r\n   * @param {HTMLImageElement} image - The image for drawing.\r\n   * @param {Object} imageData - The image data.\r\n   * @param {Object} canvasData - The canvas data.\r\n   * @param {Object} options - The options.\r\n   * @returns {HTMLCanvasElement} The result canvas.\r\n   */\r\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\r\n    var imageAspectRatio = _ref6.aspectRatio,\r\n      imageNaturalWidth = _ref6.naturalWidth,\r\n      imageNaturalHeight = _ref6.naturalHeight,\r\n      _ref6$rotate = _ref6.rotate,\r\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\r\n      _ref6$scaleX = _ref6.scaleX,\r\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\r\n      _ref6$scaleY = _ref6.scaleY,\r\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\r\n    var aspectRatio = _ref7.aspectRatio,\r\n      naturalWidth = _ref7.naturalWidth,\r\n      naturalHeight = _ref7.naturalHeight;\r\n    var _ref8$fillColor = _ref8.fillColor,\r\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\r\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\r\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\r\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\r\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\r\n      _ref8$maxWidth = _ref8.maxWidth,\r\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\r\n      _ref8$maxHeight = _ref8.maxHeight,\r\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\r\n      _ref8$minWidth = _ref8.minWidth,\r\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\r\n      _ref8$minHeight = _ref8.minHeight,\r\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    var maxSizes = getAdjustedSizes({\r\n      aspectRatio: aspectRatio,\r\n      width: maxWidth,\r\n      height: maxHeight\r\n    });\r\n    var minSizes = getAdjustedSizes({\r\n      aspectRatio: aspectRatio,\r\n      width: minWidth,\r\n      height: minHeight\r\n    }, 'cover');\r\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\r\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\r\n\r\n    // Note: should always use image's natural sizes for drawing as\r\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\r\n    var destMaxSizes = getAdjustedSizes({\r\n      aspectRatio: imageAspectRatio,\r\n      width: maxWidth,\r\n      height: maxHeight\r\n    });\r\n    var destMinSizes = getAdjustedSizes({\r\n      aspectRatio: imageAspectRatio,\r\n      width: minWidth,\r\n      height: minHeight\r\n    }, 'cover');\r\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\r\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\r\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\r\n    canvas.width = normalizeDecimalNumber(width);\r\n    canvas.height = normalizeDecimalNumber(height);\r\n    context.fillStyle = fillColor;\r\n    context.fillRect(0, 0, width, height);\r\n    context.save();\r\n    context.translate(width / 2, height / 2);\r\n    context.rotate(rotate * Math.PI / 180);\r\n    context.scale(scaleX, scaleY);\r\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\r\n    context.imageSmoothingQuality = imageSmoothingQuality;\r\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\r\n      return Math.floor(normalizeDecimalNumber(param));\r\n    }))));\r\n    context.restore();\r\n    return canvas;\r\n  }\r\n  var fromCharCode = String.fromCharCode;\r\n\r\n  /**\r\n   * Get string from char code in data view.\r\n   * @param {DataView} dataView - The data view for read.\r\n   * @param {number} start - The start index.\r\n   * @param {number} length - The read length.\r\n   * @returns {string} The read result.\r\n   */\r\n  function getStringFromCharCode(dataView, start, length) {\r\n    var str = '';\r\n    length += start;\r\n    for (var i = start; i < length; i += 1) {\r\n      str += fromCharCode(dataView.getUint8(i));\r\n    }\r\n    return str;\r\n  }\r\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\r\n\r\n  /**\r\n   * Transform Data URL to array buffer.\r\n   * @param {string} dataURL - The Data URL to transform.\r\n   * @returns {ArrayBuffer} The result array buffer.\r\n   */\r\n  function dataURLToArrayBuffer(dataURL) {\r\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\r\n    var binary = atob(base64);\r\n    var arrayBuffer = new ArrayBuffer(binary.length);\r\n    var uint8 = new Uint8Array(arrayBuffer);\r\n    forEach(uint8, function (value, i) {\r\n      uint8[i] = binary.charCodeAt(i);\r\n    });\r\n    return arrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Transform array buffer to Data URL.\r\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\r\n   * @param {string} mimeType - The mime type of the Data URL.\r\n   * @returns {string} The result Data URL.\r\n   */\r\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\r\n    var chunks = [];\r\n\r\n    // Chunk Typed Array for better performance (#435)\r\n    var chunkSize = 8192;\r\n    var uint8 = new Uint8Array(arrayBuffer);\r\n    while (uint8.length > 0) {\r\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\r\n      // eslint-disable-next-line prefer-spread\r\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\r\n      uint8 = uint8.subarray(chunkSize);\r\n    }\r\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\r\n  }\r\n\r\n  /**\r\n   * Get orientation value from given array buffer.\r\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\r\n   * @returns {number} The read orientation value.\r\n   */\r\n  function resetAndGetOrientation(arrayBuffer) {\r\n    var dataView = new DataView(arrayBuffer);\r\n    var orientation;\r\n\r\n    // Ignores range error when the image does not have correct Exif information\r\n    try {\r\n      var littleEndian;\r\n      var app1Start;\r\n      var ifdStart;\r\n\r\n      // Only handle JPEG image (start by 0xFFD8)\r\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\r\n        var length = dataView.byteLength;\r\n        var offset = 2;\r\n        while (offset + 1 < length) {\r\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\r\n            app1Start = offset;\r\n            break;\r\n          }\r\n          offset += 1;\r\n        }\r\n      }\r\n      if (app1Start) {\r\n        var exifIDCode = app1Start + 4;\r\n        var tiffOffset = app1Start + 10;\r\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\r\n          var endianness = dataView.getUint16(tiffOffset);\r\n          littleEndian = endianness === 0x4949;\r\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\r\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\r\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\r\n              if (firstIFDOffset >= 0x00000008) {\r\n                ifdStart = tiffOffset + firstIFDOffset;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (ifdStart) {\r\n        var _length = dataView.getUint16(ifdStart, littleEndian);\r\n        var _offset;\r\n        var i;\r\n        for (i = 0; i < _length; i += 1) {\r\n          _offset = ifdStart + i * 12 + 2;\r\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\r\n            // 8 is the offset of the current tag's value\r\n            _offset += 8;\r\n\r\n            // Get the original orientation value\r\n            orientation = dataView.getUint16(_offset, littleEndian);\r\n\r\n            // Override the orientation with its default value\r\n            dataView.setUint16(_offset, 1, littleEndian);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      orientation = 1;\r\n    }\r\n    return orientation;\r\n  }\r\n\r\n  /**\r\n   * Parse Exif Orientation value.\r\n   * @param {number} orientation - The orientation to parse.\r\n   * @returns {Object} The parsed result.\r\n   */\r\n  function parseOrientation(orientation) {\r\n    var rotate = 0;\r\n    var scaleX = 1;\r\n    var scaleY = 1;\r\n    switch (orientation) {\r\n      // Flip horizontal\r\n      case 2:\r\n        scaleX = -1;\r\n        break;\r\n\r\n      // Rotate left 180°\r\n      case 3:\r\n        rotate = -180;\r\n        break;\r\n\r\n      // Flip vertical\r\n      case 4:\r\n        scaleY = -1;\r\n        break;\r\n\r\n      // Flip vertical and rotate right 90°\r\n      case 5:\r\n        rotate = 90;\r\n        scaleY = -1;\r\n        break;\r\n\r\n      // Rotate right 90°\r\n      case 6:\r\n        rotate = 90;\r\n        break;\r\n\r\n      // Flip horizontal and rotate right 90°\r\n      case 7:\r\n        rotate = 90;\r\n        scaleX = -1;\r\n        break;\r\n\r\n      // Rotate left 90°\r\n      case 8:\r\n        rotate = -90;\r\n        break;\r\n    }\r\n    return {\r\n      rotate: rotate,\r\n      scaleX: scaleX,\r\n      scaleY: scaleY\r\n    };\r\n  }\r\n\r\n  var render = {\r\n    render: function render() {\r\n      this.initContainer();\r\n      this.initCanvas();\r\n      this.initCropBox();\r\n      this.renderCanvas();\r\n      if (this.cropped) {\r\n        this.renderCropBox();\r\n      }\r\n    },\r\n    initContainer: function initContainer() {\r\n      var element = this.element,\r\n        options = this.options,\r\n        container = this.container,\r\n        cropper = this.cropper;\r\n      var minWidth = Number(options.minContainerWidth);\r\n      var minHeight = Number(options.minContainerHeight);\r\n      addClass(cropper, CLASS_HIDDEN);\r\n      removeClass(element, CLASS_HIDDEN);\r\n      var containerData = {\r\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\r\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\r\n      };\r\n      this.containerData = containerData;\r\n      setStyle(cropper, {\r\n        width: containerData.width,\r\n        height: containerData.height\r\n      });\r\n      addClass(element, CLASS_HIDDEN);\r\n      removeClass(cropper, CLASS_HIDDEN);\r\n    },\r\n    // Canvas (image wrapper)\r\n    initCanvas: function initCanvas() {\r\n      var containerData = this.containerData,\r\n        imageData = this.imageData;\r\n      var viewMode = this.options.viewMode;\r\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\r\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\r\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\r\n      var aspectRatio = naturalWidth / naturalHeight;\r\n      var canvasWidth = containerData.width;\r\n      var canvasHeight = containerData.height;\r\n      if (containerData.height * aspectRatio > containerData.width) {\r\n        if (viewMode === 3) {\r\n          canvasWidth = containerData.height * aspectRatio;\r\n        } else {\r\n          canvasHeight = containerData.width / aspectRatio;\r\n        }\r\n      } else if (viewMode === 3) {\r\n        canvasHeight = containerData.width / aspectRatio;\r\n      } else {\r\n        canvasWidth = containerData.height * aspectRatio;\r\n      }\r\n      var canvasData = {\r\n        aspectRatio: aspectRatio,\r\n        naturalWidth: naturalWidth,\r\n        naturalHeight: naturalHeight,\r\n        width: canvasWidth,\r\n        height: canvasHeight\r\n      };\r\n      this.canvasData = canvasData;\r\n      this.limited = viewMode === 1 || viewMode === 2;\r\n      this.limitCanvas(true, true);\r\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\r\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\r\n      canvasData.left = (containerData.width - canvasData.width) / 2;\r\n      canvasData.top = (containerData.height - canvasData.height) / 2;\r\n      canvasData.oldLeft = canvasData.left;\r\n      canvasData.oldTop = canvasData.top;\r\n      this.initialCanvasData = assign({}, canvasData);\r\n    },\r\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\r\n      var options = this.options,\r\n        containerData = this.containerData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var viewMode = options.viewMode;\r\n      var aspectRatio = canvasData.aspectRatio;\r\n      var cropped = this.cropped && cropBoxData;\r\n      if (sizeLimited) {\r\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\r\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\r\n        if (viewMode > 1) {\r\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\r\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\r\n          if (viewMode === 3) {\r\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\r\n              minCanvasWidth = minCanvasHeight * aspectRatio;\r\n            } else {\r\n              minCanvasHeight = minCanvasWidth / aspectRatio;\r\n            }\r\n          }\r\n        } else if (viewMode > 0) {\r\n          if (minCanvasWidth) {\r\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\r\n          } else if (minCanvasHeight) {\r\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\r\n          } else if (cropped) {\r\n            minCanvasWidth = cropBoxData.width;\r\n            minCanvasHeight = cropBoxData.height;\r\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\r\n              minCanvasWidth = minCanvasHeight * aspectRatio;\r\n            } else {\r\n              minCanvasHeight = minCanvasWidth / aspectRatio;\r\n            }\r\n          }\r\n        }\r\n        var _getAdjustedSizes = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: minCanvasWidth,\r\n          height: minCanvasHeight\r\n        });\r\n        minCanvasWidth = _getAdjustedSizes.width;\r\n        minCanvasHeight = _getAdjustedSizes.height;\r\n        canvasData.minWidth = minCanvasWidth;\r\n        canvasData.minHeight = minCanvasHeight;\r\n        canvasData.maxWidth = Infinity;\r\n        canvasData.maxHeight = Infinity;\r\n      }\r\n      if (positionLimited) {\r\n        if (viewMode > (cropped ? 0 : 1)) {\r\n          var newCanvasLeft = containerData.width - canvasData.width;\r\n          var newCanvasTop = containerData.height - canvasData.height;\r\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\r\n          canvasData.minTop = Math.min(0, newCanvasTop);\r\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\r\n          canvasData.maxTop = Math.max(0, newCanvasTop);\r\n          if (cropped && this.limited) {\r\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\r\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\r\n            canvasData.maxLeft = cropBoxData.left;\r\n            canvasData.maxTop = cropBoxData.top;\r\n            if (viewMode === 2) {\r\n              if (canvasData.width >= containerData.width) {\r\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\r\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\r\n              }\r\n              if (canvasData.height >= containerData.height) {\r\n                canvasData.minTop = Math.min(0, newCanvasTop);\r\n                canvasData.maxTop = Math.max(0, newCanvasTop);\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          canvasData.minLeft = -canvasData.width;\r\n          canvasData.minTop = -canvasData.height;\r\n          canvasData.maxLeft = containerData.width;\r\n          canvasData.maxTop = containerData.height;\r\n        }\r\n      }\r\n    },\r\n    renderCanvas: function renderCanvas(changed, transformed) {\r\n      var canvasData = this.canvasData,\r\n        imageData = this.imageData;\r\n      if (transformed) {\r\n        var _getRotatedSizes = getRotatedSizes({\r\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\r\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\r\n            degree: imageData.rotate || 0\r\n          }),\r\n          naturalWidth = _getRotatedSizes.width,\r\n          naturalHeight = _getRotatedSizes.height;\r\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\r\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\r\n        canvasData.left -= (width - canvasData.width) / 2;\r\n        canvasData.top -= (height - canvasData.height) / 2;\r\n        canvasData.width = width;\r\n        canvasData.height = height;\r\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\r\n        canvasData.naturalWidth = naturalWidth;\r\n        canvasData.naturalHeight = naturalHeight;\r\n        this.limitCanvas(true, false);\r\n      }\r\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\r\n        canvasData.left = canvasData.oldLeft;\r\n      }\r\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\r\n        canvasData.top = canvasData.oldTop;\r\n      }\r\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\r\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\r\n      this.limitCanvas(false, true);\r\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\r\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\r\n      canvasData.oldLeft = canvasData.left;\r\n      canvasData.oldTop = canvasData.top;\r\n      setStyle(this.canvas, assign({\r\n        width: canvasData.width,\r\n        height: canvasData.height\r\n      }, getTransforms({\r\n        translateX: canvasData.left,\r\n        translateY: canvasData.top\r\n      })));\r\n      this.renderImage(changed);\r\n      if (this.cropped && this.limited) {\r\n        this.limitCropBox(true, true);\r\n      }\r\n    },\r\n    renderImage: function renderImage(changed) {\r\n      var canvasData = this.canvasData,\r\n        imageData = this.imageData;\r\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\r\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\r\n      assign(imageData, {\r\n        width: width,\r\n        height: height,\r\n        left: (canvasData.width - width) / 2,\r\n        top: (canvasData.height - height) / 2\r\n      });\r\n      setStyle(this.image, assign({\r\n        width: imageData.width,\r\n        height: imageData.height\r\n      }, getTransforms(assign({\r\n        translateX: imageData.left,\r\n        translateY: imageData.top\r\n      }, imageData))));\r\n      if (changed) {\r\n        this.output();\r\n      }\r\n    },\r\n    initCropBox: function initCropBox() {\r\n      var options = this.options,\r\n        canvasData = this.canvasData;\r\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\r\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\r\n      var cropBoxData = {\r\n        width: canvasData.width,\r\n        height: canvasData.height\r\n      };\r\n      if (aspectRatio) {\r\n        if (canvasData.height * aspectRatio > canvasData.width) {\r\n          cropBoxData.height = cropBoxData.width / aspectRatio;\r\n        } else {\r\n          cropBoxData.width = cropBoxData.height * aspectRatio;\r\n        }\r\n      }\r\n      this.cropBoxData = cropBoxData;\r\n      this.limitCropBox(true, true);\r\n\r\n      // Initialize auto crop area\r\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\r\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\r\n\r\n      // The width/height of auto crop area must large than \"minWidth/Height\"\r\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\r\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\r\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\r\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\r\n      cropBoxData.oldLeft = cropBoxData.left;\r\n      cropBoxData.oldTop = cropBoxData.top;\r\n      this.initialCropBoxData = assign({}, cropBoxData);\r\n    },\r\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\r\n      var options = this.options,\r\n        containerData = this.containerData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData,\r\n        limited = this.limited;\r\n      var aspectRatio = options.aspectRatio;\r\n      if (sizeLimited) {\r\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\r\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\r\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\r\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\r\n\r\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\r\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\r\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\r\n        if (aspectRatio) {\r\n          if (minCropBoxWidth && minCropBoxHeight) {\r\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\r\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\r\n            } else {\r\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\r\n            }\r\n          } else if (minCropBoxWidth) {\r\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\r\n          } else if (minCropBoxHeight) {\r\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\r\n          }\r\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\r\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\r\n          } else {\r\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\r\n          }\r\n        }\r\n\r\n        // The minWidth/Height must be less than maxWidth/Height\r\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\r\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\r\n        cropBoxData.maxWidth = maxCropBoxWidth;\r\n        cropBoxData.maxHeight = maxCropBoxHeight;\r\n      }\r\n      if (positionLimited) {\r\n        if (limited) {\r\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\r\n          cropBoxData.minTop = Math.max(0, canvasData.top);\r\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\r\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\r\n        } else {\r\n          cropBoxData.minLeft = 0;\r\n          cropBoxData.minTop = 0;\r\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\r\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\r\n        }\r\n      }\r\n    },\r\n    renderCropBox: function renderCropBox() {\r\n      var options = this.options,\r\n        containerData = this.containerData,\r\n        cropBoxData = this.cropBoxData;\r\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\r\n        cropBoxData.left = cropBoxData.oldLeft;\r\n      }\r\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\r\n        cropBoxData.top = cropBoxData.oldTop;\r\n      }\r\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\r\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\r\n      this.limitCropBox(false, true);\r\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\r\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\r\n      cropBoxData.oldLeft = cropBoxData.left;\r\n      cropBoxData.oldTop = cropBoxData.top;\r\n      if (options.movable && options.cropBoxMovable) {\r\n        // Turn to move the canvas when the crop box is equal to the container\r\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\r\n      }\r\n      setStyle(this.cropBox, assign({\r\n        width: cropBoxData.width,\r\n        height: cropBoxData.height\r\n      }, getTransforms({\r\n        translateX: cropBoxData.left,\r\n        translateY: cropBoxData.top\r\n      })));\r\n      if (this.cropped && this.limited) {\r\n        this.limitCanvas(true, true);\r\n      }\r\n      if (!this.disabled) {\r\n        this.output();\r\n      }\r\n    },\r\n    output: function output() {\r\n      this.preview();\r\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\r\n    }\r\n  };\r\n\r\n  var preview = {\r\n    initPreview: function initPreview() {\r\n      var element = this.element,\r\n        crossOrigin = this.crossOrigin;\r\n      var preview = this.options.preview;\r\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\r\n      var alt = element.alt || 'The image to preview';\r\n      var image = document.createElement('img');\r\n      if (crossOrigin) {\r\n        image.crossOrigin = crossOrigin;\r\n      }\r\n      image.src = url;\r\n      image.alt = alt;\r\n      this.viewBox.appendChild(image);\r\n      this.viewBoxImage = image;\r\n      if (!preview) {\r\n        return;\r\n      }\r\n      var previews = preview;\r\n      if (typeof preview === 'string') {\r\n        previews = element.ownerDocument.querySelectorAll(preview);\r\n      } else if (preview.querySelector) {\r\n        previews = [preview];\r\n      }\r\n      this.previews = previews;\r\n      forEach(previews, function (el) {\r\n        var img = document.createElement('img');\r\n\r\n        // Save the original size for recover\r\n        setData(el, DATA_PREVIEW, {\r\n          width: el.offsetWidth,\r\n          height: el.offsetHeight,\r\n          html: el.innerHTML\r\n        });\r\n        if (crossOrigin) {\r\n          img.crossOrigin = crossOrigin;\r\n        }\r\n        img.src = url;\r\n        img.alt = alt;\r\n\r\n        /**\r\n         * Override img element styles\r\n         * Add `display:block` to avoid margin top issue\r\n         * Add `height:auto` to override `height` attribute on IE8\r\n         * (Occur only when margin-top <= -height)\r\n         */\r\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\r\n        el.innerHTML = '';\r\n        el.appendChild(img);\r\n      });\r\n    },\r\n    resetPreview: function resetPreview() {\r\n      forEach(this.previews, function (element) {\r\n        var data = getData(element, DATA_PREVIEW);\r\n        setStyle(element, {\r\n          width: data.width,\r\n          height: data.height\r\n        });\r\n        element.innerHTML = data.html;\r\n        removeData(element, DATA_PREVIEW);\r\n      });\r\n    },\r\n    preview: function preview() {\r\n      var imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var cropBoxWidth = cropBoxData.width,\r\n        cropBoxHeight = cropBoxData.height;\r\n      var width = imageData.width,\r\n        height = imageData.height;\r\n      var left = cropBoxData.left - canvasData.left - imageData.left;\r\n      var top = cropBoxData.top - canvasData.top - imageData.top;\r\n      if (!this.cropped || this.disabled) {\r\n        return;\r\n      }\r\n      setStyle(this.viewBoxImage, assign({\r\n        width: width,\r\n        height: height\r\n      }, getTransforms(assign({\r\n        translateX: -left,\r\n        translateY: -top\r\n      }, imageData))));\r\n      forEach(this.previews, function (element) {\r\n        var data = getData(element, DATA_PREVIEW);\r\n        var originalWidth = data.width;\r\n        var originalHeight = data.height;\r\n        var newWidth = originalWidth;\r\n        var newHeight = originalHeight;\r\n        var ratio = 1;\r\n        if (cropBoxWidth) {\r\n          ratio = originalWidth / cropBoxWidth;\r\n          newHeight = cropBoxHeight * ratio;\r\n        }\r\n        if (cropBoxHeight && newHeight > originalHeight) {\r\n          ratio = originalHeight / cropBoxHeight;\r\n          newWidth = cropBoxWidth * ratio;\r\n          newHeight = originalHeight;\r\n        }\r\n        setStyle(element, {\r\n          width: newWidth,\r\n          height: newHeight\r\n        });\r\n        setStyle(element.getElementsByTagName('img')[0], assign({\r\n          width: width * ratio,\r\n          height: height * ratio\r\n        }, getTransforms(assign({\r\n          translateX: -left * ratio,\r\n          translateY: -top * ratio\r\n        }, imageData))));\r\n      });\r\n    }\r\n  };\r\n\r\n  var events = {\r\n    bind: function bind() {\r\n      var element = this.element,\r\n        options = this.options,\r\n        cropper = this.cropper;\r\n      if (isFunction(options.cropstart)) {\r\n        addListener(element, EVENT_CROP_START, options.cropstart);\r\n      }\r\n      if (isFunction(options.cropmove)) {\r\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\r\n      }\r\n      if (isFunction(options.cropend)) {\r\n        addListener(element, EVENT_CROP_END, options.cropend);\r\n      }\r\n      if (isFunction(options.crop)) {\r\n        addListener(element, EVENT_CROP, options.crop);\r\n      }\r\n      if (isFunction(options.zoom)) {\r\n        addListener(element, EVENT_ZOOM, options.zoom);\r\n      }\r\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\r\n      if (options.zoomable && options.zoomOnWheel) {\r\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\r\n          passive: false,\r\n          capture: true\r\n        });\r\n      }\r\n      if (options.toggleDragModeOnDblclick) {\r\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\r\n      }\r\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\r\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\r\n      if (options.responsive) {\r\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\r\n      }\r\n    },\r\n    unbind: function unbind() {\r\n      var element = this.element,\r\n        options = this.options,\r\n        cropper = this.cropper;\r\n      if (isFunction(options.cropstart)) {\r\n        removeListener(element, EVENT_CROP_START, options.cropstart);\r\n      }\r\n      if (isFunction(options.cropmove)) {\r\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\r\n      }\r\n      if (isFunction(options.cropend)) {\r\n        removeListener(element, EVENT_CROP_END, options.cropend);\r\n      }\r\n      if (isFunction(options.crop)) {\r\n        removeListener(element, EVENT_CROP, options.crop);\r\n      }\r\n      if (isFunction(options.zoom)) {\r\n        removeListener(element, EVENT_ZOOM, options.zoom);\r\n      }\r\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\r\n      if (options.zoomable && options.zoomOnWheel) {\r\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\r\n          passive: false,\r\n          capture: true\r\n        });\r\n      }\r\n      if (options.toggleDragModeOnDblclick) {\r\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\r\n      }\r\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\r\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\r\n      if (options.responsive) {\r\n        removeListener(window, EVENT_RESIZE, this.onResize);\r\n      }\r\n    }\r\n  };\r\n\r\n  var handlers = {\r\n    resize: function resize() {\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n      var options = this.options,\r\n        container = this.container,\r\n        containerData = this.containerData;\r\n      var ratioX = container.offsetWidth / containerData.width;\r\n      var ratioY = container.offsetHeight / containerData.height;\r\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\r\n\r\n      // Resize when width changed or height changed\r\n      if (ratio !== 1) {\r\n        var canvasData;\r\n        var cropBoxData;\r\n        if (options.restore) {\r\n          canvasData = this.getCanvasData();\r\n          cropBoxData = this.getCropBoxData();\r\n        }\r\n        this.render();\r\n        if (options.restore) {\r\n          this.setCanvasData(forEach(canvasData, function (n, i) {\r\n            canvasData[i] = n * ratio;\r\n          }));\r\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\r\n            cropBoxData[i] = n * ratio;\r\n          }));\r\n        }\r\n      }\r\n    },\r\n    dblclick: function dblclick() {\r\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\r\n        return;\r\n      }\r\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\r\n    },\r\n    wheel: function wheel(event) {\r\n      var _this = this;\r\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\r\n      var delta = 1;\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n\r\n      // Limit wheel speed to prevent zoom too fast (#21)\r\n      if (this.wheeling) {\r\n        return;\r\n      }\r\n      this.wheeling = true;\r\n      setTimeout(function () {\r\n        _this.wheeling = false;\r\n      }, 50);\r\n      if (event.deltaY) {\r\n        delta = event.deltaY > 0 ? 1 : -1;\r\n      } else if (event.wheelDelta) {\r\n        delta = -event.wheelDelta / 120;\r\n      } else if (event.detail) {\r\n        delta = event.detail > 0 ? 1 : -1;\r\n      }\r\n      this.zoom(-delta * ratio, event);\r\n    },\r\n    cropStart: function cropStart(event) {\r\n      var buttons = event.buttons,\r\n        button = event.button;\r\n      if (this.disabled\r\n\r\n      // Handle mouse event and pointer event and ignore touch event\r\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\r\n      // No primary button (Usually the left button)\r\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\r\n\r\n      // Open context menu\r\n      || event.ctrlKey)) {\r\n        return;\r\n      }\r\n      var options = this.options,\r\n        pointers = this.pointers;\r\n      var action;\r\n      if (event.changedTouches) {\r\n        // Handle touch event\r\n        forEach(event.changedTouches, function (touch) {\r\n          pointers[touch.identifier] = getPointer(touch);\r\n        });\r\n      } else {\r\n        // Handle mouse event and pointer event\r\n        pointers[event.pointerId || 0] = getPointer(event);\r\n      }\r\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\r\n        action = ACTION_ZOOM;\r\n      } else {\r\n        action = getData(event.target, DATA_ACTION);\r\n      }\r\n      if (!REGEXP_ACTIONS.test(action)) {\r\n        return;\r\n      }\r\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\r\n        originalEvent: event,\r\n        action: action\r\n      }) === false) {\r\n        return;\r\n      }\r\n\r\n      // This line is required for preventing page zooming in iOS browsers\r\n      event.preventDefault();\r\n      this.action = action;\r\n      this.cropping = false;\r\n      if (action === ACTION_CROP) {\r\n        this.cropping = true;\r\n        addClass(this.dragBox, CLASS_MODAL);\r\n      }\r\n    },\r\n    cropMove: function cropMove(event) {\r\n      var action = this.action;\r\n      if (this.disabled || !action) {\r\n        return;\r\n      }\r\n      var pointers = this.pointers;\r\n      event.preventDefault();\r\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\r\n        originalEvent: event,\r\n        action: action\r\n      }) === false) {\r\n        return;\r\n      }\r\n      if (event.changedTouches) {\r\n        forEach(event.changedTouches, function (touch) {\r\n          // The first parameter should not be undefined (#432)\r\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\r\n        });\r\n      } else {\r\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\r\n      }\r\n      this.change(event);\r\n    },\r\n    cropEnd: function cropEnd(event) {\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n      var action = this.action,\r\n        pointers = this.pointers;\r\n      if (event.changedTouches) {\r\n        forEach(event.changedTouches, function (touch) {\r\n          delete pointers[touch.identifier];\r\n        });\r\n      } else {\r\n        delete pointers[event.pointerId || 0];\r\n      }\r\n      if (!action) {\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n      if (!Object.keys(pointers).length) {\r\n        this.action = '';\r\n      }\r\n      if (this.cropping) {\r\n        this.cropping = false;\r\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\r\n      }\r\n      dispatchEvent(this.element, EVENT_CROP_END, {\r\n        originalEvent: event,\r\n        action: action\r\n      });\r\n    }\r\n  };\r\n\r\n  var change = {\r\n    change: function change(event) {\r\n      var options = this.options,\r\n        canvasData = this.canvasData,\r\n        containerData = this.containerData,\r\n        cropBoxData = this.cropBoxData,\r\n        pointers = this.pointers;\r\n      var action = this.action;\r\n      var aspectRatio = options.aspectRatio;\r\n      var left = cropBoxData.left,\r\n        top = cropBoxData.top,\r\n        width = cropBoxData.width,\r\n        height = cropBoxData.height;\r\n      var right = left + width;\r\n      var bottom = top + height;\r\n      var minLeft = 0;\r\n      var minTop = 0;\r\n      var maxWidth = containerData.width;\r\n      var maxHeight = containerData.height;\r\n      var renderable = true;\r\n      var offset;\r\n\r\n      // Locking aspect ratio in \"free mode\" by holding shift key\r\n      if (!aspectRatio && event.shiftKey) {\r\n        aspectRatio = width && height ? width / height : 1;\r\n      }\r\n      if (this.limited) {\r\n        minLeft = cropBoxData.minLeft;\r\n        minTop = cropBoxData.minTop;\r\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\r\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\r\n      }\r\n      var pointer = pointers[Object.keys(pointers)[0]];\r\n      var range = {\r\n        x: pointer.endX - pointer.startX,\r\n        y: pointer.endY - pointer.startY\r\n      };\r\n      var check = function check(side) {\r\n        switch (side) {\r\n          case ACTION_EAST:\r\n            if (right + range.x > maxWidth) {\r\n              range.x = maxWidth - right;\r\n            }\r\n            break;\r\n          case ACTION_WEST:\r\n            if (left + range.x < minLeft) {\r\n              range.x = minLeft - left;\r\n            }\r\n            break;\r\n          case ACTION_NORTH:\r\n            if (top + range.y < minTop) {\r\n              range.y = minTop - top;\r\n            }\r\n            break;\r\n          case ACTION_SOUTH:\r\n            if (bottom + range.y > maxHeight) {\r\n              range.y = maxHeight - bottom;\r\n            }\r\n            break;\r\n        }\r\n      };\r\n      switch (action) {\r\n        // Move crop box\r\n        case ACTION_ALL:\r\n          left += range.x;\r\n          top += range.y;\r\n          break;\r\n\r\n        // Resize crop box\r\n        case ACTION_EAST:\r\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n          check(ACTION_EAST);\r\n          width += range.x;\r\n          if (width < 0) {\r\n            action = ACTION_WEST;\r\n            width = -width;\r\n            left -= width;\r\n          }\r\n          if (aspectRatio) {\r\n            height = width / aspectRatio;\r\n            top += (cropBoxData.height - height) / 2;\r\n          }\r\n          break;\r\n        case ACTION_NORTH:\r\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n          check(ACTION_NORTH);\r\n          height -= range.y;\r\n          top += range.y;\r\n          if (height < 0) {\r\n            action = ACTION_SOUTH;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n          if (aspectRatio) {\r\n            width = height * aspectRatio;\r\n            left += (cropBoxData.width - width) / 2;\r\n          }\r\n          break;\r\n        case ACTION_WEST:\r\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n          check(ACTION_WEST);\r\n          width -= range.x;\r\n          left += range.x;\r\n          if (width < 0) {\r\n            action = ACTION_EAST;\r\n            width = -width;\r\n            left -= width;\r\n          }\r\n          if (aspectRatio) {\r\n            height = width / aspectRatio;\r\n            top += (cropBoxData.height - height) / 2;\r\n          }\r\n          break;\r\n        case ACTION_SOUTH:\r\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n          check(ACTION_SOUTH);\r\n          height += range.y;\r\n          if (height < 0) {\r\n            action = ACTION_NORTH;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n          if (aspectRatio) {\r\n            width = height * aspectRatio;\r\n            left += (cropBoxData.width - width) / 2;\r\n          }\r\n          break;\r\n        case ACTION_NORTH_EAST:\r\n          if (aspectRatio) {\r\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n            check(ACTION_NORTH);\r\n            height -= range.y;\r\n            top += range.y;\r\n            width = height * aspectRatio;\r\n          } else {\r\n            check(ACTION_NORTH);\r\n            check(ACTION_EAST);\r\n            if (range.x >= 0) {\r\n              if (right < maxWidth) {\r\n                width += range.x;\r\n              } else if (range.y <= 0 && top <= minTop) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width += range.x;\r\n            }\r\n            if (range.y <= 0) {\r\n              if (top > minTop) {\r\n                height -= range.y;\r\n                top += range.y;\r\n              }\r\n            } else {\r\n              height -= range.y;\r\n              top += range.y;\r\n            }\r\n          }\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_SOUTH_WEST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_NORTH_WEST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_SOUTH_EAST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n          break;\r\n        case ACTION_NORTH_WEST:\r\n          if (aspectRatio) {\r\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n            check(ACTION_NORTH);\r\n            height -= range.y;\r\n            top += range.y;\r\n            width = height * aspectRatio;\r\n            left += cropBoxData.width - width;\r\n          } else {\r\n            check(ACTION_NORTH);\r\n            check(ACTION_WEST);\r\n            if (range.x <= 0) {\r\n              if (left > minLeft) {\r\n                width -= range.x;\r\n                left += range.x;\r\n              } else if (range.y <= 0 && top <= minTop) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width -= range.x;\r\n              left += range.x;\r\n            }\r\n            if (range.y <= 0) {\r\n              if (top > minTop) {\r\n                height -= range.y;\r\n                top += range.y;\r\n              }\r\n            } else {\r\n              height -= range.y;\r\n              top += range.y;\r\n            }\r\n          }\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_SOUTH_EAST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_NORTH_EAST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_SOUTH_WEST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n          break;\r\n        case ACTION_SOUTH_WEST:\r\n          if (aspectRatio) {\r\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n            check(ACTION_WEST);\r\n            width -= range.x;\r\n            left += range.x;\r\n            height = width / aspectRatio;\r\n          } else {\r\n            check(ACTION_SOUTH);\r\n            check(ACTION_WEST);\r\n            if (range.x <= 0) {\r\n              if (left > minLeft) {\r\n                width -= range.x;\r\n                left += range.x;\r\n              } else if (range.y >= 0 && bottom >= maxHeight) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width -= range.x;\r\n              left += range.x;\r\n            }\r\n            if (range.y >= 0) {\r\n              if (bottom < maxHeight) {\r\n                height += range.y;\r\n              }\r\n            } else {\r\n              height += range.y;\r\n            }\r\n          }\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_NORTH_EAST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_SOUTH_EAST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_NORTH_WEST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n          break;\r\n        case ACTION_SOUTH_EAST:\r\n          if (aspectRatio) {\r\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n            check(ACTION_EAST);\r\n            width += range.x;\r\n            height = width / aspectRatio;\r\n          } else {\r\n            check(ACTION_SOUTH);\r\n            check(ACTION_EAST);\r\n            if (range.x >= 0) {\r\n              if (right < maxWidth) {\r\n                width += range.x;\r\n              } else if (range.y >= 0 && bottom >= maxHeight) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width += range.x;\r\n            }\r\n            if (range.y >= 0) {\r\n              if (bottom < maxHeight) {\r\n                height += range.y;\r\n              }\r\n            } else {\r\n              height += range.y;\r\n            }\r\n          }\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_NORTH_WEST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_SOUTH_WEST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_NORTH_EAST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n          break;\r\n\r\n        // Move canvas\r\n        case ACTION_MOVE:\r\n          this.move(range.x, range.y);\r\n          renderable = false;\r\n          break;\r\n\r\n        // Zoom canvas\r\n        case ACTION_ZOOM:\r\n          this.zoom(getMaxZoomRatio(pointers), event);\r\n          renderable = false;\r\n          break;\r\n\r\n        // Create crop box\r\n        case ACTION_CROP:\r\n          if (!range.x || !range.y) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n          offset = getOffset(this.cropper);\r\n          left = pointer.startX - offset.left;\r\n          top = pointer.startY - offset.top;\r\n          width = cropBoxData.minWidth;\r\n          height = cropBoxData.minHeight;\r\n          if (range.x > 0) {\r\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\r\n          } else if (range.x < 0) {\r\n            left -= width;\r\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\r\n          }\r\n          if (range.y < 0) {\r\n            top -= height;\r\n          }\r\n\r\n          // Show the crop box if is hidden\r\n          if (!this.cropped) {\r\n            removeClass(this.cropBox, CLASS_HIDDEN);\r\n            this.cropped = true;\r\n            if (this.limited) {\r\n              this.limitCropBox(true, true);\r\n            }\r\n          }\r\n          break;\r\n      }\r\n      if (renderable) {\r\n        cropBoxData.width = width;\r\n        cropBoxData.height = height;\r\n        cropBoxData.left = left;\r\n        cropBoxData.top = top;\r\n        this.action = action;\r\n        this.renderCropBox();\r\n      }\r\n\r\n      // Override\r\n      forEach(pointers, function (p) {\r\n        p.startX = p.endX;\r\n        p.startY = p.endY;\r\n      });\r\n    }\r\n  };\r\n\r\n  var methods = {\r\n    // Show the crop box manually\r\n    crop: function crop() {\r\n      if (this.ready && !this.cropped && !this.disabled) {\r\n        this.cropped = true;\r\n        this.limitCropBox(true, true);\r\n        if (this.options.modal) {\r\n          addClass(this.dragBox, CLASS_MODAL);\r\n        }\r\n        removeClass(this.cropBox, CLASS_HIDDEN);\r\n        this.setCropBoxData(this.initialCropBoxData);\r\n      }\r\n      return this;\r\n    },\r\n    // Reset the image and crop box to their initial states\r\n    reset: function reset() {\r\n      if (this.ready && !this.disabled) {\r\n        this.imageData = assign({}, this.initialImageData);\r\n        this.canvasData = assign({}, this.initialCanvasData);\r\n        this.cropBoxData = assign({}, this.initialCropBoxData);\r\n        this.renderCanvas();\r\n        if (this.cropped) {\r\n          this.renderCropBox();\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n    // Clear the crop box\r\n    clear: function clear() {\r\n      if (this.cropped && !this.disabled) {\r\n        assign(this.cropBoxData, {\r\n          left: 0,\r\n          top: 0,\r\n          width: 0,\r\n          height: 0\r\n        });\r\n        this.cropped = false;\r\n        this.renderCropBox();\r\n        this.limitCanvas(true, true);\r\n\r\n        // Render canvas after crop box rendered\r\n        this.renderCanvas();\r\n        removeClass(this.dragBox, CLASS_MODAL);\r\n        addClass(this.cropBox, CLASS_HIDDEN);\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Replace the image's src and rebuild the cropper\r\n     * @param {string} url - The new URL.\r\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\r\n     * @returns {Cropper} this\r\n     */\r\n    replace: function replace(url) {\r\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n      if (!this.disabled && url) {\r\n        if (this.isImg) {\r\n          this.element.src = url;\r\n        }\r\n        if (hasSameSize) {\r\n          this.url = url;\r\n          this.image.src = url;\r\n          if (this.ready) {\r\n            this.viewBoxImage.src = url;\r\n            forEach(this.previews, function (element) {\r\n              element.getElementsByTagName('img')[0].src = url;\r\n            });\r\n          }\r\n        } else {\r\n          if (this.isImg) {\r\n            this.replaced = true;\r\n          }\r\n          this.options.data = null;\r\n          this.uncreate();\r\n          this.load(url);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n    // Enable (unfreeze) the cropper\r\n    enable: function enable() {\r\n      if (this.ready && this.disabled) {\r\n        this.disabled = false;\r\n        removeClass(this.cropper, CLASS_DISABLED);\r\n      }\r\n      return this;\r\n    },\r\n    // Disable (freeze) the cropper\r\n    disable: function disable() {\r\n      if (this.ready && !this.disabled) {\r\n        this.disabled = true;\r\n        addClass(this.cropper, CLASS_DISABLED);\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Destroy the cropper and remove the instance from the image\r\n     * @returns {Cropper} this\r\n     */\r\n    destroy: function destroy() {\r\n      var element = this.element;\r\n      if (!element[NAMESPACE]) {\r\n        return this;\r\n      }\r\n      element[NAMESPACE] = undefined;\r\n      if (this.isImg && this.replaced) {\r\n        element.src = this.originalUrl;\r\n      }\r\n      this.uncreate();\r\n      return this;\r\n    },\r\n    /**\r\n     * Move the canvas with relative offsets\r\n     * @param {number} offsetX - The relative offset distance on the x-axis.\r\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    move: function move(offsetX) {\r\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\r\n      var _this$canvasData = this.canvasData,\r\n        left = _this$canvasData.left,\r\n        top = _this$canvasData.top;\r\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\r\n    },\r\n    /**\r\n     * Move the canvas to an absolute point\r\n     * @param {number} x - The x-axis coordinate.\r\n     * @param {number} [y=x] - The y-axis coordinate.\r\n     * @returns {Cropper} this\r\n     */\r\n    moveTo: function moveTo(x) {\r\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\r\n      var canvasData = this.canvasData;\r\n      var changed = false;\r\n      x = Number(x);\r\n      y = Number(y);\r\n      if (this.ready && !this.disabled && this.options.movable) {\r\n        if (isNumber(x)) {\r\n          canvasData.left = x;\r\n          changed = true;\r\n        }\r\n        if (isNumber(y)) {\r\n          canvasData.top = y;\r\n          changed = true;\r\n        }\r\n        if (changed) {\r\n          this.renderCanvas(true);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Zoom the canvas with a relative ratio\r\n     * @param {number} ratio - The target ratio.\r\n     * @param {Event} _originalEvent - The original event if any.\r\n     * @returns {Cropper} this\r\n     */\r\n    zoom: function zoom(ratio, _originalEvent) {\r\n      var canvasData = this.canvasData;\r\n      ratio = Number(ratio);\r\n      if (ratio < 0) {\r\n        ratio = 1 / (1 - ratio);\r\n      } else {\r\n        ratio = 1 + ratio;\r\n      }\r\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\r\n    },\r\n    /**\r\n     * Zoom the canvas to an absolute ratio\r\n     * @param {number} ratio - The target ratio.\r\n     * @param {Object} pivot - The zoom pivot point coordinate.\r\n     * @param {Event} _originalEvent - The original event if any.\r\n     * @returns {Cropper} this\r\n     */\r\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\r\n      var options = this.options,\r\n        canvasData = this.canvasData;\r\n      var width = canvasData.width,\r\n        height = canvasData.height,\r\n        naturalWidth = canvasData.naturalWidth,\r\n        naturalHeight = canvasData.naturalHeight;\r\n      ratio = Number(ratio);\r\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\r\n        var newWidth = naturalWidth * ratio;\r\n        var newHeight = naturalHeight * ratio;\r\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\r\n          ratio: ratio,\r\n          oldRatio: width / naturalWidth,\r\n          originalEvent: _originalEvent\r\n        }) === false) {\r\n          return this;\r\n        }\r\n        if (_originalEvent) {\r\n          var pointers = this.pointers;\r\n          var offset = getOffset(this.cropper);\r\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\r\n            pageX: _originalEvent.pageX,\r\n            pageY: _originalEvent.pageY\r\n          };\r\n\r\n          // Zoom from the triggering point of the event\r\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\r\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\r\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\r\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\r\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\r\n        } else {\r\n          // Zoom from the center of the canvas\r\n          canvasData.left -= (newWidth - width) / 2;\r\n          canvasData.top -= (newHeight - height) / 2;\r\n        }\r\n        canvasData.width = newWidth;\r\n        canvasData.height = newHeight;\r\n        this.renderCanvas(true);\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Rotate the canvas with a relative degree\r\n     * @param {number} degree - The rotate degree.\r\n     * @returns {Cropper} this\r\n     */\r\n    rotate: function rotate(degree) {\r\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\r\n    },\r\n    /**\r\n     * Rotate the canvas to an absolute degree\r\n     * @param {number} degree - The rotate degree.\r\n     * @returns {Cropper} this\r\n     */\r\n    rotateTo: function rotateTo(degree) {\r\n      degree = Number(degree);\r\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\r\n        this.imageData.rotate = degree % 360;\r\n        this.renderCanvas(true, true);\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Scale the image on the x-axis.\r\n     * @param {number} scaleX - The scale ratio on the x-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    scaleX: function scaleX(_scaleX) {\r\n      var scaleY = this.imageData.scaleY;\r\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\r\n    },\r\n    /**\r\n     * Scale the image on the y-axis.\r\n     * @param {number} scaleY - The scale ratio on the y-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    scaleY: function scaleY(_scaleY) {\r\n      var scaleX = this.imageData.scaleX;\r\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\r\n    },\r\n    /**\r\n     * Scale the image\r\n     * @param {number} scaleX - The scale ratio on the x-axis.\r\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    scale: function scale(scaleX) {\r\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\r\n      var imageData = this.imageData;\r\n      var transformed = false;\r\n      scaleX = Number(scaleX);\r\n      scaleY = Number(scaleY);\r\n      if (this.ready && !this.disabled && this.options.scalable) {\r\n        if (isNumber(scaleX)) {\r\n          imageData.scaleX = scaleX;\r\n          transformed = true;\r\n        }\r\n        if (isNumber(scaleY)) {\r\n          imageData.scaleY = scaleY;\r\n          transformed = true;\r\n        }\r\n        if (transformed) {\r\n          this.renderCanvas(true, true);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Get the cropped area position and size data (base on the original image)\r\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\r\n     * @returns {Object} The result cropped data.\r\n     */\r\n    getData: function getData() {\r\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n      var options = this.options,\r\n        imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var data;\r\n      if (this.ready && this.cropped) {\r\n        data = {\r\n          x: cropBoxData.left - canvasData.left,\r\n          y: cropBoxData.top - canvasData.top,\r\n          width: cropBoxData.width,\r\n          height: cropBoxData.height\r\n        };\r\n        var ratio = imageData.width / imageData.naturalWidth;\r\n        forEach(data, function (n, i) {\r\n          data[i] = n / ratio;\r\n        });\r\n        if (rounded) {\r\n          // In case rounding off leads to extra 1px in right or bottom border\r\n          // we should round the top-left corner and the dimension (#343).\r\n          var bottom = Math.round(data.y + data.height);\r\n          var right = Math.round(data.x + data.width);\r\n          data.x = Math.round(data.x);\r\n          data.y = Math.round(data.y);\r\n          data.width = right - data.x;\r\n          data.height = bottom - data.y;\r\n        }\r\n      } else {\r\n        data = {\r\n          x: 0,\r\n          y: 0,\r\n          width: 0,\r\n          height: 0\r\n        };\r\n      }\r\n      if (options.rotatable) {\r\n        data.rotate = imageData.rotate || 0;\r\n      }\r\n      if (options.scalable) {\r\n        data.scaleX = imageData.scaleX || 1;\r\n        data.scaleY = imageData.scaleY || 1;\r\n      }\r\n      return data;\r\n    },\r\n    /**\r\n     * Set the cropped area position and size with new data\r\n     * @param {Object} data - The new data.\r\n     * @returns {Cropper} this\r\n     */\r\n    setData: function setData(data) {\r\n      var options = this.options,\r\n        imageData = this.imageData,\r\n        canvasData = this.canvasData;\r\n      var cropBoxData = {};\r\n      if (this.ready && !this.disabled && isPlainObject(data)) {\r\n        var transformed = false;\r\n        if (options.rotatable) {\r\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\r\n            imageData.rotate = data.rotate;\r\n            transformed = true;\r\n          }\r\n        }\r\n        if (options.scalable) {\r\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\r\n            imageData.scaleX = data.scaleX;\r\n            transformed = true;\r\n          }\r\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\r\n            imageData.scaleY = data.scaleY;\r\n            transformed = true;\r\n          }\r\n        }\r\n        if (transformed) {\r\n          this.renderCanvas(true, true);\r\n        }\r\n        var ratio = imageData.width / imageData.naturalWidth;\r\n        if (isNumber(data.x)) {\r\n          cropBoxData.left = data.x * ratio + canvasData.left;\r\n        }\r\n        if (isNumber(data.y)) {\r\n          cropBoxData.top = data.y * ratio + canvasData.top;\r\n        }\r\n        if (isNumber(data.width)) {\r\n          cropBoxData.width = data.width * ratio;\r\n        }\r\n        if (isNumber(data.height)) {\r\n          cropBoxData.height = data.height * ratio;\r\n        }\r\n        this.setCropBoxData(cropBoxData);\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Get the container size data.\r\n     * @returns {Object} The result container data.\r\n     */\r\n    getContainerData: function getContainerData() {\r\n      return this.ready ? assign({}, this.containerData) : {};\r\n    },\r\n    /**\r\n     * Get the image position and size data.\r\n     * @returns {Object} The result image data.\r\n     */\r\n    getImageData: function getImageData() {\r\n      return this.sized ? assign({}, this.imageData) : {};\r\n    },\r\n    /**\r\n     * Get the canvas position and size data.\r\n     * @returns {Object} The result canvas data.\r\n     */\r\n    getCanvasData: function getCanvasData() {\r\n      var canvasData = this.canvasData;\r\n      var data = {};\r\n      if (this.ready) {\r\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\r\n          data[n] = canvasData[n];\r\n        });\r\n      }\r\n      return data;\r\n    },\r\n    /**\r\n     * Set the canvas position and size with new data.\r\n     * @param {Object} data - The new canvas data.\r\n     * @returns {Cropper} this\r\n     */\r\n    setCanvasData: function setCanvasData(data) {\r\n      var canvasData = this.canvasData;\r\n      var aspectRatio = canvasData.aspectRatio;\r\n      if (this.ready && !this.disabled && isPlainObject(data)) {\r\n        if (isNumber(data.left)) {\r\n          canvasData.left = data.left;\r\n        }\r\n        if (isNumber(data.top)) {\r\n          canvasData.top = data.top;\r\n        }\r\n        if (isNumber(data.width)) {\r\n          canvasData.width = data.width;\r\n          canvasData.height = data.width / aspectRatio;\r\n        } else if (isNumber(data.height)) {\r\n          canvasData.height = data.height;\r\n          canvasData.width = data.height * aspectRatio;\r\n        }\r\n        this.renderCanvas(true);\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Get the crop box position and size data.\r\n     * @returns {Object} The result crop box data.\r\n     */\r\n    getCropBoxData: function getCropBoxData() {\r\n      var cropBoxData = this.cropBoxData;\r\n      var data;\r\n      if (this.ready && this.cropped) {\r\n        data = {\r\n          left: cropBoxData.left,\r\n          top: cropBoxData.top,\r\n          width: cropBoxData.width,\r\n          height: cropBoxData.height\r\n        };\r\n      }\r\n      return data || {};\r\n    },\r\n    /**\r\n     * Set the crop box position and size with new data.\r\n     * @param {Object} data - The new crop box data.\r\n     * @returns {Cropper} this\r\n     */\r\n    setCropBoxData: function setCropBoxData(data) {\r\n      var cropBoxData = this.cropBoxData;\r\n      var aspectRatio = this.options.aspectRatio;\r\n      var widthChanged;\r\n      var heightChanged;\r\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\r\n        if (isNumber(data.left)) {\r\n          cropBoxData.left = data.left;\r\n        }\r\n        if (isNumber(data.top)) {\r\n          cropBoxData.top = data.top;\r\n        }\r\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\r\n          widthChanged = true;\r\n          cropBoxData.width = data.width;\r\n        }\r\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\r\n          heightChanged = true;\r\n          cropBoxData.height = data.height;\r\n        }\r\n        if (aspectRatio) {\r\n          if (widthChanged) {\r\n            cropBoxData.height = cropBoxData.width / aspectRatio;\r\n          } else if (heightChanged) {\r\n            cropBoxData.width = cropBoxData.height * aspectRatio;\r\n          }\r\n        }\r\n        this.renderCropBox();\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Get a canvas drawn the cropped image.\r\n     * @param {Object} [options={}] - The config options.\r\n     * @returns {HTMLCanvasElement} - The result canvas.\r\n     */\r\n    getCroppedCanvas: function getCroppedCanvas() {\r\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n      if (!this.ready || !window.HTMLCanvasElement) {\r\n        return null;\r\n      }\r\n      var canvasData = this.canvasData;\r\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\r\n\r\n      // Returns the source canvas if it is not cropped.\r\n      if (!this.cropped) {\r\n        return source;\r\n      }\r\n      var _this$getData = this.getData(options.rounded),\r\n        initialX = _this$getData.x,\r\n        initialY = _this$getData.y,\r\n        initialWidth = _this$getData.width,\r\n        initialHeight = _this$getData.height;\r\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\r\n      if (ratio !== 1) {\r\n        initialX *= ratio;\r\n        initialY *= ratio;\r\n        initialWidth *= ratio;\r\n        initialHeight *= ratio;\r\n      }\r\n      var aspectRatio = initialWidth / initialHeight;\r\n      var maxSizes = getAdjustedSizes({\r\n        aspectRatio: aspectRatio,\r\n        width: options.maxWidth || Infinity,\r\n        height: options.maxHeight || Infinity\r\n      });\r\n      var minSizes = getAdjustedSizes({\r\n        aspectRatio: aspectRatio,\r\n        width: options.minWidth || 0,\r\n        height: options.minHeight || 0\r\n      }, 'cover');\r\n      var _getAdjustedSizes = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\r\n          height: options.height || (ratio !== 1 ? source.height : initialHeight)\r\n        }),\r\n        width = _getAdjustedSizes.width,\r\n        height = _getAdjustedSizes.height;\r\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\r\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\r\n      var canvas = document.createElement('canvas');\r\n      var context = canvas.getContext('2d');\r\n      canvas.width = normalizeDecimalNumber(width);\r\n      canvas.height = normalizeDecimalNumber(height);\r\n      context.fillStyle = options.fillColor || 'transparent';\r\n      context.fillRect(0, 0, width, height);\r\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\r\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\r\n        imageSmoothingQuality = options.imageSmoothingQuality;\r\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\r\n      if (imageSmoothingQuality) {\r\n        context.imageSmoothingQuality = imageSmoothingQuality;\r\n      }\r\n\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\r\n      var sourceWidth = source.width;\r\n      var sourceHeight = source.height;\r\n\r\n      // Source canvas parameters\r\n      var srcX = initialX;\r\n      var srcY = initialY;\r\n      var srcWidth;\r\n      var srcHeight;\r\n\r\n      // Destination canvas parameters\r\n      var dstX;\r\n      var dstY;\r\n      var dstWidth;\r\n      var dstHeight;\r\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\r\n        srcX = 0;\r\n        srcWidth = 0;\r\n        dstX = 0;\r\n        dstWidth = 0;\r\n      } else if (srcX <= 0) {\r\n        dstX = -srcX;\r\n        srcX = 0;\r\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\r\n        dstWidth = srcWidth;\r\n      } else if (srcX <= sourceWidth) {\r\n        dstX = 0;\r\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\r\n        dstWidth = srcWidth;\r\n      }\r\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\r\n        srcY = 0;\r\n        srcHeight = 0;\r\n        dstY = 0;\r\n        dstHeight = 0;\r\n      } else if (srcY <= 0) {\r\n        dstY = -srcY;\r\n        srcY = 0;\r\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\r\n        dstHeight = srcHeight;\r\n      } else if (srcY <= sourceHeight) {\r\n        dstY = 0;\r\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\r\n        dstHeight = srcHeight;\r\n      }\r\n      var params = [srcX, srcY, srcWidth, srcHeight];\r\n\r\n      // Avoid \"IndexSizeError\"\r\n      if (dstWidth > 0 && dstHeight > 0) {\r\n        var scale = width / initialWidth;\r\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\r\n      }\r\n\r\n      // All the numerical parameters should be integer for `drawImage`\r\n      // https://github.com/fengyuanchen/cropper/issues/476\r\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\r\n        return Math.floor(normalizeDecimalNumber(param));\r\n      }))));\r\n      return canvas;\r\n    },\r\n    /**\r\n     * Change the aspect ratio of the crop box.\r\n     * @param {number} aspectRatio - The new aspect ratio.\r\n     * @returns {Cropper} this\r\n     */\r\n    setAspectRatio: function setAspectRatio(aspectRatio) {\r\n      var options = this.options;\r\n      if (!this.disabled && !isUndefined(aspectRatio)) {\r\n        // 0 -> NaN\r\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\r\n        if (this.ready) {\r\n          this.initCropBox();\r\n          if (this.cropped) {\r\n            this.renderCropBox();\r\n          }\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n    /**\r\n     * Change the drag mode.\r\n     * @param {string} mode - The new drag mode.\r\n     * @returns {Cropper} this\r\n     */\r\n    setDragMode: function setDragMode(mode) {\r\n      var options = this.options,\r\n        dragBox = this.dragBox,\r\n        face = this.face;\r\n      if (this.ready && !this.disabled) {\r\n        var croppable = mode === DRAG_MODE_CROP;\r\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\r\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\r\n        options.dragMode = mode;\r\n        setData(dragBox, DATA_ACTION, mode);\r\n        toggleClass(dragBox, CLASS_CROP, croppable);\r\n        toggleClass(dragBox, CLASS_MOVE, movable);\r\n        if (!options.cropBoxMovable) {\r\n          // Sync drag mode to crop box when it is not movable\r\n          setData(face, DATA_ACTION, mode);\r\n          toggleClass(face, CLASS_CROP, croppable);\r\n          toggleClass(face, CLASS_MOVE, movable);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  };\r\n\r\n  var AnotherCropper = WINDOW.Cropper;\r\n  var Cropper = /*#__PURE__*/function () {\r\n    /**\r\n     * Create a new Cropper.\r\n     * @param {Element} element - The target element for cropping.\r\n     * @param {Object} [options={}] - The configuration options.\r\n     */\r\n    function Cropper(element) {\r\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n      _classCallCheck(this, Cropper);\r\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\r\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\r\n      }\r\n      this.element = element;\r\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\r\n      this.cropped = false;\r\n      this.disabled = false;\r\n      this.pointers = {};\r\n      this.ready = false;\r\n      this.reloading = false;\r\n      this.replaced = false;\r\n      this.sized = false;\r\n      this.sizing = false;\r\n      this.init();\r\n    }\r\n    _createClass(Cropper, [{\r\n      key: \"init\",\r\n      value: function init() {\r\n        var element = this.element;\r\n        var tagName = element.tagName.toLowerCase();\r\n        var url;\r\n        if (element[NAMESPACE]) {\r\n          return;\r\n        }\r\n        element[NAMESPACE] = this;\r\n        if (tagName === 'img') {\r\n          this.isImg = true;\r\n\r\n          // e.g.: \"img/picture.jpg\"\r\n          url = element.getAttribute('src') || '';\r\n          this.originalUrl = url;\r\n\r\n          // Stop when it's a blank image\r\n          if (!url) {\r\n            return;\r\n          }\r\n\r\n          // e.g.: \"https://example.com/img/picture.jpg\"\r\n          url = element.src;\r\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\r\n          url = element.toDataURL();\r\n        }\r\n        this.load(url);\r\n      }\r\n    }, {\r\n      key: \"load\",\r\n      value: function load(url) {\r\n        var _this = this;\r\n        if (!url) {\r\n          return;\r\n        }\r\n        this.url = url;\r\n        this.imageData = {};\r\n        var element = this.element,\r\n          options = this.options;\r\n        if (!options.rotatable && !options.scalable) {\r\n          options.checkOrientation = false;\r\n        }\r\n\r\n        // Only IE10+ supports Typed Arrays\r\n        if (!options.checkOrientation || !window.ArrayBuffer) {\r\n          this.clone();\r\n          return;\r\n        }\r\n\r\n        // Detect the mime type of the image directly if it is a Data URL\r\n        if (REGEXP_DATA_URL.test(url)) {\r\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\r\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\r\n            this.read(dataURLToArrayBuffer(url));\r\n          } else {\r\n            // Only a JPEG image may contains Exif Orientation information,\r\n            // the rest types of Data URLs are not necessary to check orientation at all.\r\n            this.clone();\r\n          }\r\n          return;\r\n        }\r\n\r\n        // 1. Detect the mime type of the image by a XMLHttpRequest.\r\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\r\n        var xhr = new XMLHttpRequest();\r\n        var clone = this.clone.bind(this);\r\n        this.reloading = true;\r\n        this.xhr = xhr;\r\n\r\n        // 1. Cross origin requests are only supported for protocol schemes:\r\n        // http, https, data, chrome, chrome-extension.\r\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\r\n        // in some browsers as IE11 and Safari.\r\n        xhr.onabort = clone;\r\n        xhr.onerror = clone;\r\n        xhr.ontimeout = clone;\r\n        xhr.onprogress = function () {\r\n          // Abort the request directly if it not a JPEG image for better performance\r\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\r\n            xhr.abort();\r\n          }\r\n        };\r\n        xhr.onload = function () {\r\n          _this.read(xhr.response);\r\n        };\r\n        xhr.onloadend = function () {\r\n          _this.reloading = false;\r\n          _this.xhr = null;\r\n        };\r\n\r\n        // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\r\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\r\n          url = addTimestamp(url);\r\n        }\r\n\r\n        // The third parameter is required for avoiding side-effect (#682)\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\r\n        xhr.send();\r\n      }\r\n    }, {\r\n      key: \"read\",\r\n      value: function read(arrayBuffer) {\r\n        var options = this.options,\r\n          imageData = this.imageData;\r\n\r\n        // Reset the orientation value to its default value 1\r\n        // as some iOS browsers will render image with its orientation\r\n        var orientation = resetAndGetOrientation(arrayBuffer);\r\n        var rotate = 0;\r\n        var scaleX = 1;\r\n        var scaleY = 1;\r\n        if (orientation > 1) {\r\n          // Generate a new URL which has the default orientation value\r\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\r\n          var _parseOrientation = parseOrientation(orientation);\r\n          rotate = _parseOrientation.rotate;\r\n          scaleX = _parseOrientation.scaleX;\r\n          scaleY = _parseOrientation.scaleY;\r\n        }\r\n        if (options.rotatable) {\r\n          imageData.rotate = rotate;\r\n        }\r\n        if (options.scalable) {\r\n          imageData.scaleX = scaleX;\r\n          imageData.scaleY = scaleY;\r\n        }\r\n        this.clone();\r\n      }\r\n    }, {\r\n      key: \"clone\",\r\n      value: function clone() {\r\n        var element = this.element,\r\n          url = this.url;\r\n        var crossOrigin = element.crossOrigin;\r\n        var crossOriginUrl = url;\r\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\r\n          if (!crossOrigin) {\r\n            crossOrigin = 'anonymous';\r\n          }\r\n\r\n          // Bust cache when there is not a \"crossOrigin\" property (#519)\r\n          crossOriginUrl = addTimestamp(url);\r\n        }\r\n        this.crossOrigin = crossOrigin;\r\n        this.crossOriginUrl = crossOriginUrl;\r\n        var image = document.createElement('img');\r\n        if (crossOrigin) {\r\n          image.crossOrigin = crossOrigin;\r\n        }\r\n        image.src = crossOriginUrl || url;\r\n        image.alt = element.alt || 'The image to crop';\r\n        this.image = image;\r\n        image.onload = this.start.bind(this);\r\n        image.onerror = this.stop.bind(this);\r\n        addClass(image, CLASS_HIDE);\r\n        element.parentNode.insertBefore(image, element.nextSibling);\r\n      }\r\n    }, {\r\n      key: \"start\",\r\n      value: function start() {\r\n        var _this2 = this;\r\n        var image = this.image;\r\n        image.onload = null;\r\n        image.onerror = null;\r\n        this.sizing = true;\r\n\r\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\r\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\r\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\r\n        var done = function done(naturalWidth, naturalHeight) {\r\n          assign(_this2.imageData, {\r\n            naturalWidth: naturalWidth,\r\n            naturalHeight: naturalHeight,\r\n            aspectRatio: naturalWidth / naturalHeight\r\n          });\r\n          _this2.initialImageData = assign({}, _this2.imageData);\r\n          _this2.sizing = false;\r\n          _this2.sized = true;\r\n          _this2.build();\r\n        };\r\n\r\n        // Most modern browsers (excepts iOS WebKit)\r\n        if (image.naturalWidth && !isIOSWebKit) {\r\n          done(image.naturalWidth, image.naturalHeight);\r\n          return;\r\n        }\r\n        var sizingImage = document.createElement('img');\r\n        var body = document.body || document.documentElement;\r\n        this.sizingImage = sizingImage;\r\n        sizingImage.onload = function () {\r\n          done(sizingImage.width, sizingImage.height);\r\n          if (!isIOSWebKit) {\r\n            body.removeChild(sizingImage);\r\n          }\r\n        };\r\n        sizingImage.src = image.src;\r\n\r\n        // iOS WebKit will convert the image automatically\r\n        // with its orientation once append it into DOM (#279)\r\n        if (!isIOSWebKit) {\r\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\r\n          body.appendChild(sizingImage);\r\n        }\r\n      }\r\n    }, {\r\n      key: \"stop\",\r\n      value: function stop() {\r\n        var image = this.image;\r\n        image.onload = null;\r\n        image.onerror = null;\r\n        image.parentNode.removeChild(image);\r\n        this.image = null;\r\n      }\r\n    }, {\r\n      key: \"build\",\r\n      value: function build() {\r\n        if (!this.sized || this.ready) {\r\n          return;\r\n        }\r\n        var element = this.element,\r\n          options = this.options,\r\n          image = this.image;\r\n\r\n        // Create cropper elements\r\n        var container = element.parentNode;\r\n        var template = document.createElement('div');\r\n        template.innerHTML = TEMPLATE;\r\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\r\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\r\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\r\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\r\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\r\n        this.container = container;\r\n        this.cropper = cropper;\r\n        this.canvas = canvas;\r\n        this.dragBox = dragBox;\r\n        this.cropBox = cropBox;\r\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\r\n        this.face = face;\r\n        canvas.appendChild(image);\r\n\r\n        // Hide the original image\r\n        addClass(element, CLASS_HIDDEN);\r\n\r\n        // Inserts the cropper after to the current image\r\n        container.insertBefore(cropper, element.nextSibling);\r\n\r\n        // Show the hidden image\r\n        removeClass(image, CLASS_HIDE);\r\n        this.initPreview();\r\n        this.bind();\r\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\r\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\r\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\r\n        addClass(cropBox, CLASS_HIDDEN);\r\n        if (!options.guides) {\r\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\r\n        }\r\n        if (!options.center) {\r\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\r\n        }\r\n        if (options.background) {\r\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\r\n        }\r\n        if (!options.highlight) {\r\n          addClass(face, CLASS_INVISIBLE);\r\n        }\r\n        if (options.cropBoxMovable) {\r\n          addClass(face, CLASS_MOVE);\r\n          setData(face, DATA_ACTION, ACTION_ALL);\r\n        }\r\n        if (!options.cropBoxResizable) {\r\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\r\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\r\n        }\r\n        this.render();\r\n        this.ready = true;\r\n        this.setDragMode(options.dragMode);\r\n        if (options.autoCrop) {\r\n          this.crop();\r\n        }\r\n        this.setData(options.data);\r\n        if (isFunction(options.ready)) {\r\n          addListener(element, EVENT_READY, options.ready, {\r\n            once: true\r\n          });\r\n        }\r\n        dispatchEvent(element, EVENT_READY);\r\n      }\r\n    }, {\r\n      key: \"unbuild\",\r\n      value: function unbuild() {\r\n        if (!this.ready) {\r\n          return;\r\n        }\r\n        this.ready = false;\r\n        this.unbind();\r\n        this.resetPreview();\r\n        var parentNode = this.cropper.parentNode;\r\n        if (parentNode) {\r\n          parentNode.removeChild(this.cropper);\r\n        }\r\n        removeClass(this.element, CLASS_HIDDEN);\r\n      }\r\n    }, {\r\n      key: \"uncreate\",\r\n      value: function uncreate() {\r\n        if (this.ready) {\r\n          this.unbuild();\r\n          this.ready = false;\r\n          this.cropped = false;\r\n        } else if (this.sizing) {\r\n          this.sizingImage.onload = null;\r\n          this.sizing = false;\r\n          this.sized = false;\r\n        } else if (this.reloading) {\r\n          this.xhr.onabort = null;\r\n          this.xhr.abort();\r\n        } else if (this.image) {\r\n          this.stop();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Get the no conflict cropper class.\r\n       * @returns {Cropper} The cropper class.\r\n       */\r\n    }], [{\r\n      key: \"noConflict\",\r\n      value: function noConflict() {\r\n        window.Cropper = AnotherCropper;\r\n        return Cropper;\r\n      }\r\n\r\n      /**\r\n       * Change the default options.\r\n       * @param {Object} options - The new default options.\r\n       */\r\n    }, {\r\n      key: \"setDefaults\",\r\n      value: function setDefaults(options) {\r\n        assign(DEFAULTS, isPlainObject(options) && options);\r\n      }\r\n    }]);\r\n    return Cropper;\r\n  }();\r\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\r\n\r\n  return Cropper;\r\n\r\n}));\r\n"],
  "mappings": "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",
  "names": ["r", "o", "isPositiveNumber", "assign", "listener", "render", "preview", "change", "check", "getData", "setData", "Cropper", "done"]
}
