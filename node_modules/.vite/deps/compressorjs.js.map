{
  "version": 3,
  "sources": ["../../compressorjs/dist/compressor.esm.js"],
  "sourcesContent": ["/*!\r\n * Compressor.js v1.2.1\r\n * https://fengyuanchen.github.io/compressorjs\r\n *\r\n * Copyright 2018-present Chen Fengyuan\r\n * Released under the MIT license\r\n *\r\n * Date: 2023-02-28T14:09:41.732Z\r\n */\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = Object.keys(object);\r\n  if (Object.getOwnPropertySymbols) {\r\n    var symbols = Object.getOwnPropertySymbols(object);\r\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\r\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n    })), keys.push.apply(keys, symbols);\r\n  }\r\n  return keys;\r\n}\r\nfunction _objectSpread2(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = null != arguments[i] ? arguments[i] : {};\r\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\r\n      _defineProperty(target, key, source[key]);\r\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\r\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n    });\r\n  }\r\n  return target;\r\n}\r\nfunction _classCallCheck(instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n}\r\nfunction _defineProperties(target, props) {\r\n  for (var i = 0; i < props.length; i++) {\r\n    var descriptor = props[i];\r\n    descriptor.enumerable = descriptor.enumerable || false;\r\n    descriptor.configurable = true;\r\n    if (\"value\" in descriptor) descriptor.writable = true;\r\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\r\n  }\r\n}\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n  if (staticProps) _defineProperties(Constructor, staticProps);\r\n  Object.defineProperty(Constructor, \"prototype\", {\r\n    writable: false\r\n  });\r\n  return Constructor;\r\n}\r\nfunction _defineProperty(obj, key, value) {\r\n  key = _toPropertyKey(key);\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n  return obj;\r\n}\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\nfunction _toPrimitive(input, hint) {\r\n  if (typeof input !== \"object\" || input === null) return input;\r\n  var prim = input[Symbol.toPrimitive];\r\n  if (prim !== undefined) {\r\n    var res = prim.call(input, hint || \"default\");\r\n    if (typeof res !== \"object\") return res;\r\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n  }\r\n  return (hint === \"string\" ? String : Number)(input);\r\n}\r\nfunction _toPropertyKey(arg) {\r\n  var key = _toPrimitive(arg, \"string\");\r\n  return typeof key === \"symbol\" ? key : String(key);\r\n}\r\n\r\nvar canvasToBlob = {exports: {}};\r\n\r\n/*\r\n * JavaScript Canvas to Blob\r\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\r\n *\r\n * Copyright 2012, Sebastian Tschan\r\n * https://blueimp.net\r\n *\r\n * Licensed under the MIT license:\r\n * https://opensource.org/licenses/MIT\r\n *\r\n * Based on stackoverflow user Stoive's code snippet:\r\n * http://stackoverflow.com/q/4998908\r\n */\r\n(function (module) {\r\n  if (typeof window === 'undefined') {\r\n    return;\r\n  }\r\n  (function (window) {\r\n\r\n    var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\r\n    var hasBlobConstructor = window.Blob && function () {\r\n      try {\r\n        return Boolean(new Blob());\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }();\r\n    var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\r\n      try {\r\n        return new Blob([new Uint8Array(100)]).size === 100;\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }();\r\n    var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\r\n    var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\r\n    var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\r\n      var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb;\r\n      // Parse the dataURI components as per RFC 2397\r\n      matches = dataURI.match(dataURIPattern);\r\n      if (!matches) {\r\n        throw new Error('invalid data URI');\r\n      }\r\n      // Default to text/plain;charset=US-ASCII\r\n      mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\r\n      isBase64 = !!matches[4];\r\n      dataString = dataURI.slice(matches[0].length);\r\n      if (isBase64) {\r\n        // Convert base64 to raw binary data held in a string:\r\n        byteString = atob(dataString);\r\n      } else {\r\n        // Convert base64/URLEncoded data component to raw binary:\r\n        byteString = decodeURIComponent(dataString);\r\n      }\r\n      // Write the bytes of the string to an ArrayBuffer:\r\n      arrayBuffer = new ArrayBuffer(byteString.length);\r\n      intArray = new Uint8Array(arrayBuffer);\r\n      for (i = 0; i < byteString.length; i += 1) {\r\n        intArray[i] = byteString.charCodeAt(i);\r\n      }\r\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\r\n      if (hasBlobConstructor) {\r\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\r\n          type: mediaType\r\n        });\r\n      }\r\n      bb = new BlobBuilder();\r\n      bb.append(arrayBuffer);\r\n      return bb.getBlob(mediaType);\r\n    };\r\n    if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\r\n      if (CanvasPrototype.mozGetAsFile) {\r\n        CanvasPrototype.toBlob = function (callback, type, quality) {\r\n          var self = this;\r\n          setTimeout(function () {\r\n            if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\r\n              callback(dataURLtoBlob(self.toDataURL(type, quality)));\r\n            } else {\r\n              callback(self.mozGetAsFile('blob', type));\r\n            }\r\n          });\r\n        };\r\n      } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\r\n        if (CanvasPrototype.msToBlob) {\r\n          CanvasPrototype.toBlob = function (callback, type, quality) {\r\n            var self = this;\r\n            setTimeout(function () {\r\n              if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\r\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\r\n              } else {\r\n                callback(self.msToBlob(type));\r\n              }\r\n            });\r\n          };\r\n        } else {\r\n          CanvasPrototype.toBlob = function (callback, type, quality) {\r\n            var self = this;\r\n            setTimeout(function () {\r\n              callback(dataURLtoBlob(self.toDataURL(type, quality)));\r\n            });\r\n          };\r\n        }\r\n      }\r\n    }\r\n    if (module.exports) {\r\n      module.exports = dataURLtoBlob;\r\n    } else {\r\n      window.dataURLtoBlob = dataURLtoBlob;\r\n    }\r\n  })(window);\r\n})(canvasToBlob);\r\nvar toBlob = canvasToBlob.exports;\r\n\r\nvar isBlob = function isBlob(value) {\r\n  if (typeof Blob === 'undefined') {\r\n    return false;\r\n  }\r\n  return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\r\n};\r\n\r\nvar DEFAULTS = {\r\n  /**\r\n   * Indicates if output the original image instead of the compressed one\r\n   * when the size of the compressed image is greater than the original one's\r\n   * @type {boolean}\r\n   */\r\n  strict: true,\r\n  /**\r\n   * Indicates if read the image's Exif Orientation information,\r\n   * and then rotate or flip the image automatically.\r\n   * @type {boolean}\r\n   */\r\n  checkOrientation: true,\r\n  /**\r\n   * Indicates if retain the image's Exif information after compressed.\r\n   * @type {boolean}\r\n  */\r\n  retainExif: false,\r\n  /**\r\n   * The max width of the output image.\r\n   * @type {number}\r\n   */\r\n  maxWidth: Infinity,\r\n  /**\r\n   * The max height of the output image.\r\n   * @type {number}\r\n   */\r\n  maxHeight: Infinity,\r\n  /**\r\n   * The min width of the output image.\r\n   * @type {number}\r\n   */\r\n  minWidth: 0,\r\n  /**\r\n   * The min height of the output image.\r\n   * @type {number}\r\n   */\r\n  minHeight: 0,\r\n  /**\r\n   * The width of the output image.\r\n   * If not specified, the natural width of the source image will be used.\r\n   * @type {number}\r\n   */\r\n  width: undefined,\r\n  /**\r\n   * The height of the output image.\r\n   * If not specified, the natural height of the source image will be used.\r\n   * @type {number}\r\n   */\r\n  height: undefined,\r\n  /**\r\n   * Sets how the size of the image should be resized to the container\r\n   * specified by the `width` and `height` options.\r\n   * @type {string}\r\n   */\r\n  resize: 'none',\r\n  /**\r\n   * The quality of the output image.\r\n   * It must be a number between `0` and `1`,\r\n   * and only available for `image/jpeg` and `image/webp` images.\r\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\r\n   * @type {number}\r\n   */\r\n  quality: 0.8,\r\n  /**\r\n   * The mime type of the output image.\r\n   * By default, the original mime type of the source image file will be used.\r\n   * @type {string}\r\n   */\r\n  mimeType: 'auto',\r\n  /**\r\n   * Files whose file type is included in this list,\r\n   * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\r\n   * @type {string｜Array}\r\n   */\r\n  convertTypes: ['image/png'],\r\n  /**\r\n   * PNG files over this size (5 MB by default) will be converted to JPEGs.\r\n   * To disable this, just set the value to `Infinity`.\r\n   * @type {number}\r\n   */\r\n  convertSize: 5000000,\r\n  /**\r\n   * The hook function to execute before draw the image into the canvas for compression.\r\n   * @type {Function}\r\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\r\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\r\n   * @example\r\n   * function (context, canvas) {\r\n   *   context.fillStyle = '#fff';\r\n   * }\r\n   */\r\n  beforeDraw: null,\r\n  /**\r\n   * The hook function to execute after drew the image into the canvas for compression.\r\n   * @type {Function}\r\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\r\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\r\n   * @example\r\n   * function (context, canvas) {\r\n   *   context.filter = 'grayscale(100%)';\r\n   * }\r\n   */\r\n  drew: null,\r\n  /**\r\n   * The hook function to execute when success to compress the image.\r\n   * @type {Function}\r\n   * @param {File} file - The compressed image File object.\r\n   * @example\r\n   * function (file) {\r\n   *   console.log(file);\r\n   * }\r\n   */\r\n  success: null,\r\n  /**\r\n   * The hook function to execute when fail to compress the image.\r\n   * @type {Function}\r\n   * @param {Error} err - An Error object.\r\n   * @example\r\n   * function (err) {\r\n   *   console.log(err.message);\r\n   * }\r\n   */\r\n  error: null\r\n};\r\n\r\nvar IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\nvar WINDOW = IS_BROWSER ? window : {};\r\n\r\n/**\r\n * Check if the given value is a positive number.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\r\n */\r\nvar isPositiveNumber = function isPositiveNumber(value) {\r\n  return value > 0 && value < Infinity;\r\n};\r\nvar slice = Array.prototype.slice;\r\n\r\n/**\r\n * Convert array-like or iterable object to an array.\r\n * @param {*} value - The value to convert.\r\n * @returns {Array} Returns a new array.\r\n */\r\nfunction toArray(value) {\r\n  return Array.from ? Array.from(value) : slice.call(value);\r\n}\r\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\r\n\r\n/**\r\n * Check if the given value is a mime type of image.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\r\n */\r\nfunction isImageType(value) {\r\n  return REGEXP_IMAGE_TYPE.test(value);\r\n}\r\n\r\n/**\r\n * Convert image type to extension.\r\n * @param {string} value - The image type to convert.\r\n * @returns {boolean} Returns the image extension.\r\n */\r\nfunction imageTypeToExtension(value) {\r\n  var extension = isImageType(value) ? value.substr(6) : '';\r\n  if (extension === 'jpeg') {\r\n    extension = 'jpg';\r\n  }\r\n  return \".\".concat(extension);\r\n}\r\nvar fromCharCode = String.fromCharCode;\r\n\r\n/**\r\n * Get string from char code in data view.\r\n * @param {DataView} dataView - The data view for read.\r\n * @param {number} start - The start index.\r\n * @param {number} length - The read length.\r\n * @returns {string} The read result.\r\n */\r\nfunction getStringFromCharCode(dataView, start, length) {\r\n  var str = '';\r\n  var i;\r\n  length += start;\r\n  for (i = start; i < length; i += 1) {\r\n    str += fromCharCode(dataView.getUint8(i));\r\n  }\r\n  return str;\r\n}\r\nvar btoa = WINDOW.btoa;\r\n\r\n/**\r\n * Transform array buffer to Data URL.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\r\n * @param {string} mimeType - The mime type of the Data URL.\r\n * @returns {string} The result Data URL.\r\n */\r\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\r\n  var chunks = [];\r\n  var chunkSize = 8192;\r\n  var uint8 = new Uint8Array(arrayBuffer);\r\n  while (uint8.length > 0) {\r\n    // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\r\n    // eslint-disable-next-line prefer-spread\r\n    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\r\n    uint8 = uint8.subarray(chunkSize);\r\n  }\r\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\r\n}\r\n\r\n/**\r\n * Get orientation value from given array buffer.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\r\n * @returns {number} The read orientation value.\r\n */\r\nfunction resetAndGetOrientation(arrayBuffer) {\r\n  var dataView = new DataView(arrayBuffer);\r\n  var orientation;\r\n\r\n  // Ignores range error when the image does not have correct Exif information\r\n  try {\r\n    var littleEndian;\r\n    var app1Start;\r\n    var ifdStart;\r\n\r\n    // Only handle JPEG image (start by 0xFFD8)\r\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\r\n      var length = dataView.byteLength;\r\n      var offset = 2;\r\n      while (offset + 1 < length) {\r\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\r\n          app1Start = offset;\r\n          break;\r\n        }\r\n        offset += 1;\r\n      }\r\n    }\r\n    if (app1Start) {\r\n      var exifIDCode = app1Start + 4;\r\n      var tiffOffset = app1Start + 10;\r\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\r\n        var endianness = dataView.getUint16(tiffOffset);\r\n        littleEndian = endianness === 0x4949;\r\n        if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\r\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\r\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\r\n            if (firstIFDOffset >= 0x00000008) {\r\n              ifdStart = tiffOffset + firstIFDOffset;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (ifdStart) {\r\n      var _length = dataView.getUint16(ifdStart, littleEndian);\r\n      var _offset;\r\n      var i;\r\n      for (i = 0; i < _length; i += 1) {\r\n        _offset = ifdStart + i * 12 + 2;\r\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\r\n          // 8 is the offset of the current tag's value\r\n          _offset += 8;\r\n\r\n          // Get the original orientation value\r\n          orientation = dataView.getUint16(_offset, littleEndian);\r\n\r\n          // Override the orientation with its default value\r\n          dataView.setUint16(_offset, 1, littleEndian);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    orientation = 1;\r\n  }\r\n  return orientation;\r\n}\r\n\r\n/**\r\n * Parse Exif Orientation value.\r\n * @param {number} orientation - The orientation to parse.\r\n * @returns {Object} The parsed result.\r\n */\r\nfunction parseOrientation(orientation) {\r\n  var rotate = 0;\r\n  var scaleX = 1;\r\n  var scaleY = 1;\r\n  switch (orientation) {\r\n    // Flip horizontal\r\n    case 2:\r\n      scaleX = -1;\r\n      break;\r\n\r\n    // Rotate left 180°\r\n    case 3:\r\n      rotate = -180;\r\n      break;\r\n\r\n    // Flip vertical\r\n    case 4:\r\n      scaleY = -1;\r\n      break;\r\n\r\n    // Flip vertical and rotate right 90°\r\n    case 5:\r\n      rotate = 90;\r\n      scaleY = -1;\r\n      break;\r\n\r\n    // Rotate right 90°\r\n    case 6:\r\n      rotate = 90;\r\n      break;\r\n\r\n    // Flip horizontal and rotate right 90°\r\n    case 7:\r\n      rotate = 90;\r\n      scaleX = -1;\r\n      break;\r\n\r\n    // Rotate left 90°\r\n    case 8:\r\n      rotate = -90;\r\n      break;\r\n  }\r\n  return {\r\n    rotate: rotate,\r\n    scaleX: scaleX,\r\n    scaleY: scaleY\r\n  };\r\n}\r\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\r\n\r\n/**\r\n * Normalize decimal number.\r\n * Check out {@link https://0.30000000000000004.com/}\r\n * @param {number} value - The value to normalize.\r\n * @param {number} [times=100000000000] - The times for normalizing.\r\n * @returns {number} Returns the normalized number.\r\n */\r\nfunction normalizeDecimalNumber(value) {\r\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\r\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\r\n}\r\n\r\n/**\r\n * Get the max sizes in a rectangle under the given aspect ratio.\r\n * @param {Object} data - The original sizes.\r\n * @param {string} [type='contain'] - The adjust type.\r\n * @returns {Object} The result sizes.\r\n */\r\nfunction getAdjustedSizes(_ref) {\r\n  var aspectRatio = _ref.aspectRatio,\r\n    height = _ref.height,\r\n    width = _ref.width;\r\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\r\n  var isValidWidth = isPositiveNumber(width);\r\n  var isValidHeight = isPositiveNumber(height);\r\n  if (isValidWidth && isValidHeight) {\r\n    var adjustedWidth = height * aspectRatio;\r\n    if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\r\n      height = width / aspectRatio;\r\n    } else {\r\n      width = height * aspectRatio;\r\n    }\r\n  } else if (isValidWidth) {\r\n    height = width / aspectRatio;\r\n  } else if (isValidHeight) {\r\n    width = height * aspectRatio;\r\n  }\r\n  return {\r\n    width: width,\r\n    height: height\r\n  };\r\n}\r\n\r\n/**\r\n * Get Exif information from the given array buffer.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\r\n * @returns {Array} The read Exif information.\r\n */\r\nfunction getExif(arrayBuffer) {\r\n  var array = toArray(new Uint8Array(arrayBuffer));\r\n  var length = array.length;\r\n  var segments = [];\r\n  var start = 0;\r\n  while (start + 3 < length) {\r\n    var value = array[start];\r\n    var next = array[start + 1];\r\n\r\n    // SOS (Start of Scan)\r\n    if (value === 0xFF && next === 0xDA) {\r\n      break;\r\n    }\r\n\r\n    // SOI (Start of Image)\r\n    if (value === 0xFF && next === 0xD8) {\r\n      start += 2;\r\n    } else {\r\n      var offset = array[start + 2] * 256 + array[start + 3];\r\n      var end = start + offset + 2;\r\n      var segment = array.slice(start, end);\r\n      segments.push(segment);\r\n      start = end;\r\n    }\r\n  }\r\n  return segments.reduce(function (exifArray, current) {\r\n    if (current[0] === 0xFF && current[1] === 0xE1) {\r\n      return exifArray.concat(current);\r\n    }\r\n    return exifArray;\r\n  }, []);\r\n}\r\n\r\n/**\r\n * Insert Exif information into the given array buffer.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\r\n * @param {Array} exifArray - The Exif information to insert.\r\n * @returns {ArrayBuffer} The transformed array buffer.\r\n */\r\nfunction insertExif(arrayBuffer, exifArray) {\r\n  var array = toArray(new Uint8Array(arrayBuffer));\r\n  if (array[2] !== 0xFF || array[3] !== 0xE0) {\r\n    return arrayBuffer;\r\n  }\r\n  var app0Length = array[4] * 256 + array[5];\r\n  var newArrayBuffer = [0xFF, 0xD8].concat(exifArray, array.slice(4 + app0Length));\r\n  return new Uint8Array(newArrayBuffer);\r\n}\r\n\r\nvar ArrayBuffer$1 = WINDOW.ArrayBuffer,\r\n  FileReader = WINDOW.FileReader;\r\nvar URL = WINDOW.URL || WINDOW.webkitURL;\r\nvar REGEXP_EXTENSION = /\\.\\w+$/;\r\nvar AnotherCompressor = WINDOW.Compressor;\r\n\r\n/**\r\n * Creates a new image compressor.\r\n * @class\r\n */\r\nvar Compressor = /*#__PURE__*/function () {\r\n  /**\r\n   * The constructor of Compressor.\r\n   * @param {File|Blob} file - The target image file for compressing.\r\n   * @param {Object} [options] - The options for compressing.\r\n   */\r\n  function Compressor(file, options) {\r\n    _classCallCheck(this, Compressor);\r\n    this.file = file;\r\n    this.exif = [];\r\n    this.image = new Image();\r\n    this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\r\n    this.aborted = false;\r\n    this.result = null;\r\n    this.init();\r\n  }\r\n  _createClass(Compressor, [{\r\n    key: \"init\",\r\n    value: function init() {\r\n      var _this = this;\r\n      var file = this.file,\r\n        options = this.options;\r\n      if (!isBlob(file)) {\r\n        this.fail(new Error('The first argument must be a File or Blob object.'));\r\n        return;\r\n      }\r\n      var mimeType = file.type;\r\n      if (!isImageType(mimeType)) {\r\n        this.fail(new Error('The first argument must be an image File or Blob object.'));\r\n        return;\r\n      }\r\n      if (!URL || !FileReader) {\r\n        this.fail(new Error('The current browser does not support image compression.'));\r\n        return;\r\n      }\r\n      if (!ArrayBuffer$1) {\r\n        options.checkOrientation = false;\r\n        options.retainExif = false;\r\n      }\r\n      var isJPEGImage = mimeType === 'image/jpeg';\r\n      var checkOrientation = isJPEGImage && options.checkOrientation;\r\n      var retainExif = isJPEGImage && options.retainExif;\r\n      if (URL && !checkOrientation && !retainExif) {\r\n        this.load({\r\n          url: URL.createObjectURL(file)\r\n        });\r\n      } else {\r\n        var reader = new FileReader();\r\n        this.reader = reader;\r\n        reader.onload = function (_ref) {\r\n          var target = _ref.target;\r\n          var result = target.result;\r\n          var data = {};\r\n          var orientation = 1;\r\n          if (checkOrientation) {\r\n            // Reset the orientation value to its default value 1\r\n            // as some iOS browsers will render image with its orientation\r\n            orientation = resetAndGetOrientation(result);\r\n            if (orientation > 1) {\r\n              _extends(data, parseOrientation(orientation));\r\n            }\r\n          }\r\n          if (retainExif) {\r\n            _this.exif = getExif(result);\r\n          }\r\n          if (checkOrientation || retainExif) {\r\n            if (!URL\r\n\r\n            // Generate a new URL with the default orientation value 1.\r\n            || orientation > 1) {\r\n              data.url = arrayBufferToDataURL(result, mimeType);\r\n            } else {\r\n              data.url = URL.createObjectURL(file);\r\n            }\r\n          } else {\r\n            data.url = result;\r\n          }\r\n          _this.load(data);\r\n        };\r\n        reader.onabort = function () {\r\n          _this.fail(new Error('Aborted to read the image with FileReader.'));\r\n        };\r\n        reader.onerror = function () {\r\n          _this.fail(new Error('Failed to read the image with FileReader.'));\r\n        };\r\n        reader.onloadend = function () {\r\n          _this.reader = null;\r\n        };\r\n        if (checkOrientation || retainExif) {\r\n          reader.readAsArrayBuffer(file);\r\n        } else {\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n    }\r\n  }, {\r\n    key: \"load\",\r\n    value: function load(data) {\r\n      var _this2 = this;\r\n      var file = this.file,\r\n        image = this.image;\r\n      image.onload = function () {\r\n        _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\r\n          naturalWidth: image.naturalWidth,\r\n          naturalHeight: image.naturalHeight\r\n        }));\r\n      };\r\n      image.onabort = function () {\r\n        _this2.fail(new Error('Aborted to load the image.'));\r\n      };\r\n      image.onerror = function () {\r\n        _this2.fail(new Error('Failed to load the image.'));\r\n      };\r\n\r\n      // Match all browsers that use WebKit as the layout engine in iOS devices,\r\n      // such as Safari for iOS, Chrome for iOS, and in-app browsers.\r\n      if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\r\n        // Fix the `The operation is insecure` error (#57)\r\n        image.crossOrigin = 'anonymous';\r\n      }\r\n      image.alt = file.name;\r\n      image.src = data.url;\r\n    }\r\n  }, {\r\n    key: \"draw\",\r\n    value: function draw(_ref2) {\r\n      var _this3 = this;\r\n      var naturalWidth = _ref2.naturalWidth,\r\n        naturalHeight = _ref2.naturalHeight,\r\n        _ref2$rotate = _ref2.rotate,\r\n        rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\r\n        _ref2$scaleX = _ref2.scaleX,\r\n        scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\r\n        _ref2$scaleY = _ref2.scaleY,\r\n        scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\r\n      var file = this.file,\r\n        image = this.image,\r\n        options = this.options;\r\n      var canvas = document.createElement('canvas');\r\n      var context = canvas.getContext('2d');\r\n      var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\r\n      var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\r\n      var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\r\n      var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\r\n      var minWidth = Math.max(options.minWidth, 0) || 0;\r\n      var minHeight = Math.max(options.minHeight, 0) || 0;\r\n      var aspectRatio = naturalWidth / naturalHeight;\r\n      var width = options.width,\r\n        height = options.height;\r\n      if (is90DegreesRotated) {\r\n        var _ref3 = [maxHeight, maxWidth];\r\n        maxWidth = _ref3[0];\r\n        maxHeight = _ref3[1];\r\n        var _ref4 = [minHeight, minWidth];\r\n        minWidth = _ref4[0];\r\n        minHeight = _ref4[1];\r\n        var _ref5 = [height, width];\r\n        width = _ref5[0];\r\n        height = _ref5[1];\r\n      }\r\n      if (resizable) {\r\n        aspectRatio = width / height;\r\n      }\r\n      var _getAdjustedSizes = getAdjustedSizes({\r\n        aspectRatio: aspectRatio,\r\n        width: maxWidth,\r\n        height: maxHeight\r\n      }, 'contain');\r\n      maxWidth = _getAdjustedSizes.width;\r\n      maxHeight = _getAdjustedSizes.height;\r\n      var _getAdjustedSizes2 = getAdjustedSizes({\r\n        aspectRatio: aspectRatio,\r\n        width: minWidth,\r\n        height: minHeight\r\n      }, 'cover');\r\n      minWidth = _getAdjustedSizes2.width;\r\n      minHeight = _getAdjustedSizes2.height;\r\n      if (resizable) {\r\n        var _getAdjustedSizes3 = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: width,\r\n          height: height\r\n        }, options.resize);\r\n        width = _getAdjustedSizes3.width;\r\n        height = _getAdjustedSizes3.height;\r\n      } else {\r\n        var _getAdjustedSizes4 = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: width,\r\n          height: height\r\n        });\r\n        var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\r\n        width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\r\n        var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\r\n        height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\r\n      }\r\n      width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\r\n      height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\r\n      var destX = -width / 2;\r\n      var destY = -height / 2;\r\n      var destWidth = width;\r\n      var destHeight = height;\r\n      var params = [];\r\n      if (resizable) {\r\n        var srcX = 0;\r\n        var srcY = 0;\r\n        var srcWidth = naturalWidth;\r\n        var srcHeight = naturalHeight;\r\n        var _getAdjustedSizes5 = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: naturalWidth,\r\n          height: naturalHeight\r\n        }, {\r\n          contain: 'cover',\r\n          cover: 'contain'\r\n        }[options.resize]);\r\n        srcWidth = _getAdjustedSizes5.width;\r\n        srcHeight = _getAdjustedSizes5.height;\r\n        srcX = (naturalWidth - srcWidth) / 2;\r\n        srcY = (naturalHeight - srcHeight) / 2;\r\n        params.push(srcX, srcY, srcWidth, srcHeight);\r\n      }\r\n      params.push(destX, destY, destWidth, destHeight);\r\n      if (is90DegreesRotated) {\r\n        var _ref6 = [height, width];\r\n        width = _ref6[0];\r\n        height = _ref6[1];\r\n      }\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      if (!isImageType(options.mimeType)) {\r\n        options.mimeType = file.type;\r\n      }\r\n      var fillStyle = 'transparent';\r\n\r\n      // Converts PNG files over the `convertSize` to JPEGs.\r\n      if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\r\n        options.mimeType = 'image/jpeg';\r\n      }\r\n      var isJPEGImage = options.mimeType === 'image/jpeg';\r\n      if (isJPEGImage) {\r\n        fillStyle = '#fff';\r\n      }\r\n\r\n      // Override the default fill color (#000, black)\r\n      context.fillStyle = fillStyle;\r\n      context.fillRect(0, 0, width, height);\r\n      if (options.beforeDraw) {\r\n        options.beforeDraw.call(this, context, canvas);\r\n      }\r\n      if (this.aborted) {\r\n        return;\r\n      }\r\n      context.save();\r\n      context.translate(width / 2, height / 2);\r\n      context.rotate(rotate * Math.PI / 180);\r\n      context.scale(scaleX, scaleY);\r\n      context.drawImage.apply(context, [image].concat(params));\r\n      context.restore();\r\n      if (options.drew) {\r\n        options.drew.call(this, context, canvas);\r\n      }\r\n      if (this.aborted) {\r\n        return;\r\n      }\r\n      var callback = function callback(blob) {\r\n        if (!_this3.aborted) {\r\n          var done = function done(result) {\r\n            return _this3.done({\r\n              naturalWidth: naturalWidth,\r\n              naturalHeight: naturalHeight,\r\n              result: result\r\n            });\r\n          };\r\n          if (blob && isJPEGImage && options.retainExif && _this3.exif && _this3.exif.length > 0) {\r\n            var next = function next(arrayBuffer) {\r\n              return done(toBlob(arrayBufferToDataURL(insertExif(arrayBuffer, _this3.exif), options.mimeType)));\r\n            };\r\n            if (blob.arrayBuffer) {\r\n              blob.arrayBuffer().then(next).catch(function () {\r\n                _this3.fail(new Error('Failed to read the compressed image with Blob.arrayBuffer().'));\r\n              });\r\n            } else {\r\n              var reader = new FileReader();\r\n              _this3.reader = reader;\r\n              reader.onload = function (_ref7) {\r\n                var target = _ref7.target;\r\n                next(target.result);\r\n              };\r\n              reader.onabort = function () {\r\n                _this3.fail(new Error('Aborted to read the compressed image with FileReader.'));\r\n              };\r\n              reader.onerror = function () {\r\n                _this3.fail(new Error('Failed to read the compressed image with FileReader.'));\r\n              };\r\n              reader.onloadend = function () {\r\n                _this3.reader = null;\r\n              };\r\n              reader.readAsArrayBuffer(blob);\r\n            }\r\n          } else {\r\n            done(blob);\r\n          }\r\n        }\r\n      };\r\n      if (canvas.toBlob) {\r\n        canvas.toBlob(callback, options.mimeType, options.quality);\r\n      } else {\r\n        callback(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\r\n      }\r\n    }\r\n  }, {\r\n    key: \"done\",\r\n    value: function done(_ref8) {\r\n      var naturalWidth = _ref8.naturalWidth,\r\n        naturalHeight = _ref8.naturalHeight,\r\n        result = _ref8.result;\r\n      var file = this.file,\r\n        image = this.image,\r\n        options = this.options;\r\n      if (URL && image.src.indexOf('blob:') === 0) {\r\n        URL.revokeObjectURL(image.src);\r\n      }\r\n      if (result) {\r\n        // Returns original file if the result is greater than it and without size related options\r\n        if (options.strict && !options.retainExif && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\r\n          result = file;\r\n        } else {\r\n          var date = new Date();\r\n          result.lastModified = date.getTime();\r\n          result.lastModifiedDate = date;\r\n          result.name = file.name;\r\n\r\n          // Convert the extension to match its type\r\n          if (result.name && result.type !== file.type) {\r\n            result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\r\n          }\r\n        }\r\n      } else {\r\n        // Returns original file if the result is null in some cases.\r\n        result = file;\r\n      }\r\n      this.result = result;\r\n      if (options.success) {\r\n        options.success.call(this, result);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"fail\",\r\n    value: function fail(err) {\r\n      var options = this.options;\r\n      if (options.error) {\r\n        options.error.call(this, err);\r\n      } else {\r\n        throw err;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"abort\",\r\n    value: function abort() {\r\n      if (!this.aborted) {\r\n        this.aborted = true;\r\n        if (this.reader) {\r\n          this.reader.abort();\r\n        } else if (!this.image.complete) {\r\n          this.image.onload = null;\r\n          this.image.onabort();\r\n        } else {\r\n          this.fail(new Error('The compression process has been aborted.'));\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get the no conflict compressor class.\r\n     * @returns {Compressor} The compressor class.\r\n     */\r\n  }], [{\r\n    key: \"noConflict\",\r\n    value: function noConflict() {\r\n      window.Compressor = AnotherCompressor;\r\n      return Compressor;\r\n    }\r\n\r\n    /**\r\n     * Change the default options.\r\n     * @param {Object} options - The new default options.\r\n     */\r\n  }, {\r\n    key: \"setDefaults\",\r\n    value: function setDefaults(options) {\r\n      _extends(DEFAULTS, options);\r\n    }\r\n  }]);\r\n  return Compressor;\r\n}();\r\n\r\nexport { Compressor as default };\r\n"],
  "mappings": "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",
  "names": ["window", "isBlob", "isPositiveNumber", "Compressor", "callback", "done", "next"]
}
